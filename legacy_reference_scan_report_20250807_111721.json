{
  "timestamp": "2025-08-07T11:17:21.750313",
  "scan_type": "Legacy Code Removal Verification",
  "stage": "Stage 5 - GUI-011",
  "total_files_scanned": 255,
  "legacy_references_found": 783,
  "legacy_files_found": 2,
  "legacy_imports_found": 27,
  "legacy_functions_found": 21,
  "legacy_patterns": [],
  "clean_verification": false,
  "detailed_findings": [
    {
      "file": "main.py",
      "line": 5,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "All legacy code removed - clean modern implementation.",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_phase4.py",
      "line": 425,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove the rule",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_phase4.py",
      "line": 430,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "# Try to remove non-existent rule",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_phase4.py",
      "line": 425,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove the rule",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_crdt_phase4.py",
      "line": 430,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Try to remove",
      "context": "# Try to remove non-existent rule",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_crdt_phase4.py",
      "line": 250,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_value",
      "context": "\"value\": \"old_value\"",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase7_distributed_memory.py",
      "line": 316,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Test old session cleanup functionality\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "tests/test_phase7_distributed_memory.py",
      "line": 324,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "Old",
      "context": "memory_system.store_conversation_entry(old_session, \"Old message\", \"Old response\")",
      "severity": "LOW"
    },
    {
      "file": "tests/test_phase7_distributed_memory.py",
      "line": 324,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "Old",
      "context": "memory_system.store_conversation_entry(old_session, \"Old message\", \"Old response\")",
      "severity": "LOW"
    },
    {
      "file": "tests/test_phase7_distributed_memory.py",
      "line": 327,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Manually set old session timestamp to simulate age",
      "severity": "LOW"
    },
    {
      "file": "tests/test_phase7_distributed_memory.py",
      "line": 320,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_session",
      "context": "old_session = \"old_session_001\"",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase7_distributed_memory.py",
      "line": 320,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_session_001",
      "context": "old_session = \"old_session_001\"",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase7_distributed_memory.py",
      "line": 324,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_session",
      "context": "memory_system.store_conversation_entry(old_session, \"Old message\", \"Old response\")",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase7_distributed_memory.py",
      "line": 328,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_session",
      "context": "if old_session in memory_system.active_contexts:",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase7_distributed_memory.py",
      "line": 329,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_time",
      "context": "old_time = (datetime.now() - timedelta(hours=25)).isoformat()",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase7_distributed_memory.py",
      "line": 330,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_session",
      "context": "memory_system.active_contexts[old_session].last_updated = old_time",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase7_distributed_memory.py",
      "line": 330,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_time",
      "context": "memory_system.active_contexts[old_session].last_updated = old_time",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase8_advanced_network_topology.py",
      "line": 277,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Simulate old heartbeat for some nodes (partition condition)",
      "severity": "LOW"
    },
    {
      "file": "tests/test_phase8_advanced_network_topology.py",
      "line": 79,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove node",
      "severity": "LOW"
    },
    {
      "file": "tests/test_phase8_advanced_network_topology.py",
      "line": 79,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove node",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase8_advanced_network_topology.py",
      "line": 278,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_time",
      "context": "old_time = datetime.now() - timedelta(seconds=10)",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase8_advanced_network_topology.py",
      "line": 279,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_time",
      "context": "self.nodes[\"partition_node_2\"].last_heartbeat = old_time",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase8_advanced_network_topology.py",
      "line": 280,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_time",
      "context": "self.nodes[\"partition_node_3\"].last_heartbeat = old_time",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/run_all_tests.py",
      "line": 248,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "print(f\"[LAUNCHER] Using LEGACY mode - individual file logging\")",
      "severity": "LOW"
    },
    {
      "file": "tests/run_all_tests.py",
      "line": 253,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "\"\"\"Legacy main function for backward compatibility\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "tests/run_all_tests.py",
      "line": 266,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "(\"regression/test_regression_comprehensive.py\", \"Regression Tests - Prevent old bugs\"),",
      "severity": "LOW"
    },
    {
      "file": "tests/run_all_tests.py",
      "line": 72,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove all test log files",
      "severity": "LOW"
    },
    {
      "file": "tests/run_all_tests.py",
      "line": 76,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(file_path)",
      "severity": "LOW"
    },
    {
      "file": "tests/run_all_tests.py",
      "line": 85,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(os.path.join(logs_dir, filename))",
      "severity": "LOW"
    },
    {
      "file": "tests/run_all_tests.py",
      "line": 72,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove all test log files",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/run_all_tests.py",
      "line": 253,
      "pattern": "\"\"\".*legacy.*\"\"\"",
      "category": "legacy_comments",
      "match": "\"\"\"Legacy main function for backward compatibility\"\"\"",
      "context": "\"\"\"Legacy main function for backward compatibility\"\"\"",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_simplified_system.py",
      "line": 4,
      "pattern": "\\bdeprecated\\b",
      "category": "legacy_keywords",
      "match": "deprecated",
      "context": "Tests core functionality without deprecated components",
      "severity": "LOW"
    },
    {
      "file": "tests/test_archive_purge.py",
      "line": 102,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_archive",
      "context": "test_file = os.path.join(self.temp_dir, \"old_archive.json\")",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 302,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "\"\"\"Test basic add/remove functionality.\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 310,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove element",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 311,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "removed = or_set.remove(\"element1\")",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 317,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "\"\"\"Test concurrent add/remove operations.\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 326,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "or_set1.remove(\"element1\")",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 368,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "or_set.remove(\"element1\")",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 510,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove element",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 540,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "# Add and remove elements",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 550,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "# Cleanup with past time (should remove tombstones)",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 310,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove element",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 325,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Node1 remove",
      "context": "# Node1 removes, Node2 adds again",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 510,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove element",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 540,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Add and remove",
      "context": "# Add and remove elements",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 545,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Cleanup tombstones (with future time, so nothing should be remove",
      "context": "# Cleanup tombstones (with future time, so nothing should be removed)",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 550,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Cleanup with past time (should remove",
      "context": "# Cleanup with past time (should remove tombstones)",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_crdt_implementation.py",
      "line": 171,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_value",
      "context": "register1.write(\"old_value\")",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase10_specialized_crdt.py",
      "line": 258,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove vertex B",
      "severity": "LOW"
    },
    {
      "file": "tests/test_phase10_specialized_crdt.py",
      "line": 261,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "# Should remove vertex and all connected edges",
      "severity": "LOW"
    },
    {
      "file": "tests/test_phase10_specialized_crdt.py",
      "line": 258,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove vertex B",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_phase10_specialized_crdt.py",
      "line": 261,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Should remove",
      "context": "# Should remove vertex and all connected edges",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_crdt_edge_cases_comprehensive.py",
      "line": 108,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "\"\"\"Test concurrent add/remove operations with conflict resolution\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_edge_cases_comprehensive.py",
      "line": 116,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "# Concurrent add/remove operations",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_edge_cases_comprehensive.py",
      "line": 124,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "# Randomly remove some elements from other nodes",
      "severity": "LOW"
    },
    {
      "file": "tests/test_crdt_edge_cases_comprehensive.py",
      "line": 116,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Concurrent add/remove",
      "context": "# Concurrent add/remove operations",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_crdt_edge_cases_comprehensive.py",
      "line": 124,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Randomly remove",
      "context": "# Randomly remove some elements from other nodes",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 112,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Test cleanup of old data\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 113,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Save old record",
      "severity": "LOW"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 120,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "Old",
      "context": "message='Old record',",
      "severity": "LOW"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 428,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Test cleanup of old metric data\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 429,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Store old metric",
      "severity": "LOW"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 437,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "self.storage.store_metric('old.metric', old_metric)",
      "severity": "LOW"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 452,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Verify old metric is gone, recent remains",
      "severity": "LOW"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 453,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "old_metrics = self.storage.get_metrics('old.metric')",
      "severity": "LOW"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 111,
      "pattern": "def.*old_",
      "category": "legacy_functions",
      "match": "def test_cleanup_old_",
      "context": "def test_cleanup_old_data(self):",
      "severity": "HIGH"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 427,
      "pattern": "def.*old_",
      "category": "legacy_functions",
      "match": "def test_cleanup_old_",
      "context": "def test_cleanup_old_data(self):",
      "severity": "HIGH"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 114,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_status",
      "context": "old_status = HealthStatus(",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 123,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_status",
      "context": "self.db.save_health_status(old_status)",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 430,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_metric",
      "context": "old_metric = MetricValue(",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 437,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_metric",
      "context": "self.storage.store_metric('old.metric', old_metric)",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 453,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_metrics",
      "context": "old_metrics = self.storage.get_metrics('old.metric')",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/test_system_health_metrics_comprehensive.py",
      "line": 456,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_metrics",
      "context": "self.assertEqual(len(old_metrics), 0)",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/regression_analysis.py",
      "line": 38,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "'remove', 'delete', 'deprecate', 'disable',",
      "severity": "LOW"
    },
    {
      "file": "scripts/regression_analysis.py",
      "line": 87,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "elif any(word in message_lower for word in ['remove', 'delete', 'deprecate']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/regression_analysis.py",
      "line": 130,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "if any(kw in ['remove', 'delete', 'disable'] for kw in functionality_keywords):",
      "severity": "LOW"
    },
    {
      "file": "scripts/regression_analysis.py",
      "line": 149,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "if any(word in message_lower for word in ['remove', 'delete', 'disable', 'deprecate']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/performance_benchmarks.py",
      "line": 72,
      "pattern": "import.*old",
      "category": "legacy_imports",
      "match": "import_time < 100  # 100ms threshold",
      "context": "benchmark_status = avg_import_time < 100  # 100ms threshold",
      "severity": "HIGH"
    },
    {
      "file": "scripts/performance_benchmarks.py",
      "line": 383,
      "pattern": "import.*old",
      "category": "legacy_imports",
      "match": "Import performance threshold",
      "context": "# Import performance thresholds",
      "severity": "HIGH"
    },
    {
      "file": "scripts/performance_benchmarks.py",
      "line": 386,
      "pattern": "import.*old",
      "category": "legacy_imports",
      "match": "import_regression_threshold",
      "context": "thresholds[\"import_regression_threshold\"] = round(avg_import * 1.5, 2)  # 50% tolerance",
      "severity": "HIGH"
    },
    {
      "file": "scripts/efficient_test_runner.py",
      "line": 376,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Clean up old sessions (keep last 3 days)",
      "severity": "LOW"
    },
    {
      "file": "scripts/efficient_test_runner.py",
      "line": 383,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "Old",
      "context": "print(f\"   Old files cleaned: {len(cleaned_files)}\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/efficient_test_runner.py",
      "line": 466,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "print(f\"[STATS] Files created: {len(log_summary['files_created'])} (vs ~10,000 in old system)\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 225,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"\"\"Identify any remaining legacy functions\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 226,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "legacy_indicators = ['legacy', 'old', 'deprecated', 'obsolete', 'unused']",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 258,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "# Legacy code recommendations",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 262,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "'category': 'Legacy Elimination',",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 263,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "'issue': f'{self.report[\"legacy_functions\"]} legacy functions found',",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 264,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "'recommendation': 'Remove or refactor all legacy functions',",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 323,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "# Step 4: Check for legacy functions",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 324,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "print(\"\ud83e\uddf9 Checking for legacy functions...\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 326,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "print(f\"   Legacy functions found: {self.report['legacy_functions']}\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 361,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "print(f\"Legacy Functions: {report['legacy_functions']}\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 384,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "print(\"   All functions accessible via GUI, zero legacy code\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 226,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "legacy_indicators = ['legacy', 'old', 'deprecated', 'obsolete', 'unused']",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 226,
      "pattern": "\\bdeprecated\\b",
      "category": "legacy_keywords",
      "match": "deprecated",
      "context": "legacy_indicators = ['legacy', 'old', 'deprecated', 'obsolete', 'unused']",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 226,
      "pattern": "\\bobsolete\\b",
      "category": "legacy_keywords",
      "match": "obsolete",
      "context": "legacy_indicators = ['legacy', 'old', 'deprecated', 'obsolete', 'unused']",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 226,
      "pattern": "\\bunused\\b",
      "category": "legacy_keywords",
      "match": "unused",
      "context": "legacy_indicators = ['legacy', 'old', 'deprecated', 'obsolete', 'unused']",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 264,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "'recommendation': 'Remove or refactor all legacy functions',",
      "severity": "LOW"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 224,
      "pattern": "def.*legacy",
      "category": "legacy_functions",
      "match": "def check_legacy",
      "context": "def check_legacy_functions(self):",
      "severity": "HIGH"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 258,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Legacy",
      "context": "# Legacy code recommendations",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 323,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Step 4: Check for legacy",
      "context": "# Step 4: Check for legacy functions",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 225,
      "pattern": "\"\"\".*legacy.*\"\"\"",
      "category": "legacy_comments",
      "match": "\"\"\"Identify any remaining legacy functions\"\"\"",
      "context": "\"\"\"Identify any remaining legacy functions\"\"\"",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 20,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "self.legacy_functions = []",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 28,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "'legacy_functions': 0,",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 226,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_indicators",
      "context": "legacy_indicators = ['legacy', 'old', 'deprecated', 'obsolete', 'unused']",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 227,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_count",
      "context": "legacy_count = 0",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 232,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_indicators",
      "context": "if any(indicator in func_name_lower for indicator in legacy_indicators):",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 233,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "self.legacy_functions.append({",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 239,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_count",
      "context": "legacy_count += 1",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 241,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "self.report['legacy_functions'] = legacy_count",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 241,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_count",
      "context": "self.report['legacy_functions'] = legacy_count",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 259,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "if self.report['legacy_functions'] > 0:",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 263,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "'issue': f'{self.report[\"legacy_functions\"]} legacy functions found',",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 326,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "print(f\"   Legacy functions found: {self.report['legacy_functions']}\")",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 361,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "print(f\"Legacy Functions: {report['legacy_functions']}\")",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/functionality_audit.py",
      "line": 382,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "if coverage >= 90 and report['legacy_functions'] == 0:",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/fix_database_corruption.py",
      "line": 80,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove corrupted database",
      "severity": "LOW"
    },
    {
      "file": "scripts/fix_database_corruption.py",
      "line": 82,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(db_path)",
      "severity": "LOW"
    },
    {
      "file": "scripts/fix_database_corruption.py",
      "line": 83,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "REMOVE",
      "context": "print(f\"[REMOVE] Removed corrupted database: {db_path}\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/fix_database_corruption.py",
      "line": 80,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove corrupted database",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/analyze_error_patterns.py",
      "line": 69,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "elif any(word in message_lower for word in ['legacy', 'structure', 'architecture']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/analyze_error_patterns.py",
      "line": 199,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_code_risk",
      "context": "\"legacy_code_risk\": \"NONE\",  # Eliminated in Stage 1",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 3,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "Stage 5 - GUI-011: Legacy Code Removal Verification",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 4,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "Confirm zero legacy references remain in the codebase",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 19,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "'scan_type': 'Legacy Code Removal Verification',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 32,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "# Define legacy patterns to search for",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 36,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "r'\\bunused\\b', r'\\bremove\\b', r'\\btodo.*remove\\b', r'\\bfixme.*legacy\\b'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 39,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "r'import.*legacy', r'from.*legacy', r'import.*old', r'from.*old',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 39,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "r'import.*legacy', r'from.*legacy', r'import.*old', r'from.*old',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 43,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "r'def.*legacy', r'def.*old_', r'def.*deprecated',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 44,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "r'class.*Legacy', r'class.*Old', r'class.*Deprecated'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 47,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "r'#.*legacy', r'#.*old version', r'#.*deprecated',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 48,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "r'#.*remove', r'#.*obsolete', r'\"\"\".*legacy.*\"\"\"'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 55,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "r'legacy/', r'old/', r'deprecated/', r'obsolete/',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 61,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"\"\"Scan individual file for legacy references\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 98,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"\"\"Determine severity of legacy reference\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 112,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"\"\"Check for legacy directories\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 121,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "if any(legacy_term in dir_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete', 'backup', 'archive', 'temp']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 126,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "'recommendation': 'Remove legacy directory'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 131,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "if any(legacy_term in file_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 136,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "'recommendation': 'Review and remove legacy file'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 142,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"\"\"Scan configuration files for legacy references\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 161,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"\"\"Verify all import statements are clean of legacy references\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 177,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "# Check for legacy imports",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 178,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "if any(legacy in line_clean.lower() for legacy in ['legacy', 'old', 'deprecated']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 178,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "if any(legacy in line_clean.lower() for legacy in ['legacy', 'old', 'deprecated']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 178,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "if any(legacy in line_clean.lower() for legacy in ['legacy', 'old', 'deprecated']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 184,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "'issue': 'Legacy import statement found'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 193,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"\"\"Execute comprehensive legacy reference scan\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 194,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "print(\"\ud83e\uddf9 Starting Stage 5 - Legacy Code Removal Verification...\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 200,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "print(\"\ud83d\udcc1 Scanning source files for legacy references...\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 218,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "print(\"\ud83d\udcc2 Checking directory structure for legacy components...\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 221,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "print(f\"   Found {len(directory_findings)} legacy directory/file references\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 227,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "print(f\"   Found {len(config_findings)} legacy references in config files\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 233,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "print(f\"   Found {len(import_findings)} legacy import statements\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 243,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "legacy_references = len([f for f in findings if 'legacy' in f.get('match', '').lower()])",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 275,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"\"\"Generate recommendations for legacy code cleanup\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 281,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "'category': 'High Severity Legacy Code',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 282,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "'issue': f'{len(high_severity)} high-severity legacy references found',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 283,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "'recommendation': 'Immediately remove all legacy imports, functions, and critical references',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 284,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "'impact': 'Legacy code may cause system instability or security issues',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 291,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "'category': 'Medium Severity Legacy Code',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 292,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "'issue': f'{len(medium_severity)} medium-severity legacy references found',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 293,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "'recommendation': 'Clean up legacy comments, variables, and documentation',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 304,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "'issue': f'{len(affected_files)} files contain legacy references',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 313,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"\"\"Save legacy scan report\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 316,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "print(f\"\\n\u2705 Legacy reference scan report saved to: {output_file}\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 328,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "print(\"\ud83e\uddf9 LEGACY CODE REMOVAL VERIFICATION SUMMARY\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 331,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "print(f\"Legacy References: {report['legacy_references_found']}\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 332,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "print(f\"Legacy Files: {report['legacy_files_found']}\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 333,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "print(f\"Legacy Imports: {report['legacy_imports_found']}\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 334,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "print(f\"Legacy Functions: {report['legacy_functions_found']}\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 347,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "print(\"   Zero legacy code references found\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 349,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "print(\"\\n\u274c VERIFICATION: LEGACY CODE DETECTED\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 350,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "print(\"   Legacy references require cleanup\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 355,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "print(\"\\n\ud83d\udea8 CRITICAL LEGACY REFERENCES:\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 373,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "print(\"\\n\u2705 LEGACY VERIFICATION: PASSED\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 374,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "print(\"   Codebase completely free of legacy references\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 379,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "print(\"\\n\u26a0\ufe0f  LEGACY VERIFICATION: MINOR ISSUES\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 380,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "print(\"   Few legacy references found, cleanup recommended\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 383,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "print(\"\\n\u274c LEGACY VERIFICATION: FAILED\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 384,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "print(\"   Significant legacy code cleanup required\")",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 39,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "r'import.*legacy', r'from.*legacy', r'import.*old', r'from.*old',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 39,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "r'import.*legacy', r'from.*legacy', r'import.*old', r'from.*old',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 44,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "Old",
      "context": "r'class.*Legacy', r'class.*Old', r'class.*Deprecated'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 47,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "r'#.*legacy', r'#.*old version', r'#.*deprecated',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 55,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "r'legacy/', r'old/', r'deprecated/', r'obsolete/',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 121,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "if any(legacy_term in dir_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete', 'backup', 'archive', 'temp']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 131,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "if any(legacy_term in file_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 178,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "if any(legacy in line_clean.lower() for legacy in ['legacy', 'old', 'deprecated']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 40,
      "pattern": "\\bdeprecated\\b",
      "category": "legacy_keywords",
      "match": "deprecated",
      "context": "r'import.*deprecated', r'from.*deprecated'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 40,
      "pattern": "\\bdeprecated\\b",
      "category": "legacy_keywords",
      "match": "deprecated",
      "context": "r'import.*deprecated', r'from.*deprecated'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 43,
      "pattern": "\\bdeprecated\\b",
      "category": "legacy_keywords",
      "match": "deprecated",
      "context": "r'def.*legacy', r'def.*old_', r'def.*deprecated',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 44,
      "pattern": "\\bdeprecated\\b",
      "category": "legacy_keywords",
      "match": "Deprecated",
      "context": "r'class.*Legacy', r'class.*Old', r'class.*Deprecated'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 47,
      "pattern": "\\bdeprecated\\b",
      "category": "legacy_keywords",
      "match": "deprecated",
      "context": "r'#.*legacy', r'#.*old version', r'#.*deprecated',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 55,
      "pattern": "\\bdeprecated\\b",
      "category": "legacy_keywords",
      "match": "deprecated",
      "context": "r'legacy/', r'old/', r'deprecated/', r'obsolete/',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 121,
      "pattern": "\\bdeprecated\\b",
      "category": "legacy_keywords",
      "match": "deprecated",
      "context": "if any(legacy_term in dir_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete', 'backup', 'archive', 'temp']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 131,
      "pattern": "\\bdeprecated\\b",
      "category": "legacy_keywords",
      "match": "deprecated",
      "context": "if any(legacy_term in file_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 178,
      "pattern": "\\bdeprecated\\b",
      "category": "legacy_keywords",
      "match": "deprecated",
      "context": "if any(legacy in line_clean.lower() for legacy in ['legacy', 'old', 'deprecated']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 48,
      "pattern": "\\bobsolete\\b",
      "category": "legacy_keywords",
      "match": "obsolete",
      "context": "r'#.*remove', r'#.*obsolete', r'\"\"\".*legacy.*\"\"\"'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 55,
      "pattern": "\\bobsolete\\b",
      "category": "legacy_keywords",
      "match": "obsolete",
      "context": "r'legacy/', r'old/', r'deprecated/', r'obsolete/',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 121,
      "pattern": "\\bobsolete\\b",
      "category": "legacy_keywords",
      "match": "obsolete",
      "context": "if any(legacy_term in dir_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete', 'backup', 'archive', 'temp']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 131,
      "pattern": "\\bobsolete\\b",
      "category": "legacy_keywords",
      "match": "obsolete",
      "context": "if any(legacy_term in file_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete']):",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 36,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "r'\\bunused\\b', r'\\bremove\\b', r'\\btodo.*remove\\b', r'\\bfixme.*legacy\\b'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 48,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "r'#.*remove', r'#.*obsolete', r'\"\"\".*legacy.*\"\"\"'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 126,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "'recommendation': 'Remove legacy directory'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 136,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "'recommendation': 'Review and remove legacy file'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 283,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "'recommendation': 'Immediately remove all legacy imports, functions, and critical references',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 39,
      "pattern": "import.*legacy",
      "category": "legacy_imports",
      "match": "import.*legacy', r'from.*legacy",
      "context": "r'import.*legacy', r'from.*legacy', r'import.*old', r'from.*old',",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 102,
      "pattern": "import.*legacy",
      "category": "legacy_imports",
      "match": "imports', 'legacy",
      "context": "if category in ['legacy_imports', 'legacy_functions']:",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 161,
      "pattern": "import.*legacy",
      "category": "legacy_imports",
      "match": "import statements are clean of legacy",
      "context": "\"\"\"Verify all import statements are clean of legacy references\"\"\"",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 233,
      "pattern": "import.*legacy",
      "category": "legacy_imports",
      "match": "import_findings)} legacy",
      "context": "print(f\"   Found {len(import_findings)} legacy import statements\")",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 245,
      "pattern": "import.*legacy",
      "category": "legacy_imports",
      "match": "imports = len([f for f in findings if f.get('category') == 'legacy",
      "context": "legacy_imports = len([f for f in findings if f.get('category') == 'legacy_imports'])",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 250,
      "pattern": "import.*legacy",
      "category": "legacy_imports",
      "match": "imports_found'] = legacy",
      "context": "self.scan_report['legacy_imports_found'] = legacy_imports",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 333,
      "pattern": "import.*legacy",
      "category": "legacy_imports",
      "match": "Imports: {report['legacy",
      "context": "print(f\"Legacy Imports: {report['legacy_imports_found']}\")",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 39,
      "pattern": "from.*legacy",
      "category": "legacy_imports",
      "match": "from.*legacy",
      "context": "r'import.*legacy', r'from.*legacy', r'import.*old', r'from.*old',",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 39,
      "pattern": "import.*old",
      "category": "legacy_imports",
      "match": "import.*legacy', r'from.*legacy', r'import.*old', r'from.*old",
      "context": "r'import.*legacy', r'from.*legacy', r'import.*old', r'from.*old',",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 39,
      "pattern": "from.*old",
      "category": "legacy_imports",
      "match": "from.*legacy', r'import.*old', r'from.*old",
      "context": "r'import.*legacy', r'from.*legacy', r'import.*old', r'from.*old',",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 40,
      "pattern": "import.*deprecated",
      "category": "legacy_imports",
      "match": "import.*deprecated', r'from.*deprecated",
      "context": "r'import.*deprecated', r'from.*deprecated'",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 40,
      "pattern": "from.*deprecated",
      "category": "legacy_imports",
      "match": "from.*deprecated",
      "context": "r'import.*deprecated', r'from.*deprecated'",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 32,
      "pattern": "def.*legacy",
      "category": "legacy_functions",
      "match": "Define legacy",
      "context": "# Define legacy patterns to search for",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 43,
      "pattern": "def.*legacy",
      "category": "legacy_functions",
      "match": "def.*legacy",
      "context": "r'def.*legacy', r'def.*old_', r'def.*deprecated',",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 43,
      "pattern": "def.*old_",
      "category": "legacy_functions",
      "match": "def.*legacy', r'def.*old_",
      "context": "r'def.*legacy', r'def.*old_', r'def.*deprecated',",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 43,
      "pattern": "def.*deprecated",
      "category": "legacy_functions",
      "match": "def.*legacy', r'def.*old_', r'def.*deprecated",
      "context": "r'def.*legacy', r'def.*old_', r'def.*deprecated',",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 14,
      "pattern": "class.*Legacy",
      "category": "legacy_functions",
      "match": "class Legacy",
      "context": "class LegacyReferenceScanner:",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 44,
      "pattern": "class.*Legacy",
      "category": "legacy_functions",
      "match": "class.*Legacy",
      "context": "r'class.*Legacy', r'class.*Old', r'class.*Deprecated'",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 44,
      "pattern": "class.*Old",
      "category": "legacy_functions",
      "match": "class.*Legacy', r'class.*Old",
      "context": "r'class.*Legacy', r'class.*Old', r'class.*Deprecated'",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 44,
      "pattern": "class.*Deprecated",
      "category": "legacy_functions",
      "match": "class.*Legacy', r'class.*Old', r'class.*Deprecated",
      "context": "r'class.*Legacy', r'class.*Old', r'class.*Deprecated'",
      "severity": "HIGH"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 32,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Define legacy",
      "context": "# Define legacy patterns to search for",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 47,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "#.*legacy",
      "context": "r'#.*legacy', r'#.*old version', r'#.*deprecated',",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 48,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "#.*remove', r'#.*obsolete', r'\"\"\".*legacy",
      "context": "r'#.*remove', r'#.*obsolete', r'\"\"\".*legacy.*\"\"\"'",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 177,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Check for legacy",
      "context": "# Check for legacy imports",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 47,
      "pattern": "#.*old version",
      "category": "legacy_comments",
      "match": "#.*legacy', r'#.*old version",
      "context": "r'#.*legacy', r'#.*old version', r'#.*deprecated',",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 47,
      "pattern": "#.*deprecated",
      "category": "legacy_comments",
      "match": "#.*legacy', r'#.*old version', r'#.*deprecated",
      "context": "r'#.*legacy', r'#.*old version', r'#.*deprecated',",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 48,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "#.*remove",
      "context": "r'#.*remove', r'#.*obsolete', r'\"\"\".*legacy.*\"\"\"'",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 48,
      "pattern": "#.*obsolete",
      "category": "legacy_comments",
      "match": "#.*remove', r'#.*obsolete",
      "context": "r'#.*remove', r'#.*obsolete', r'\"\"\".*legacy.*\"\"\"'",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 48,
      "pattern": "\"\"\".*legacy.*\"\"\"",
      "category": "legacy_comments",
      "match": "\"\"\".*legacy.*\"\"\"",
      "context": "r'#.*remove', r'#.*obsolete', r'\"\"\".*legacy.*\"\"\"'",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 61,
      "pattern": "\"\"\".*legacy.*\"\"\"",
      "category": "legacy_comments",
      "match": "\"\"\"Scan individual file for legacy references\"\"\"",
      "context": "\"\"\"Scan individual file for legacy references\"\"\"",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 98,
      "pattern": "\"\"\".*legacy.*\"\"\"",
      "category": "legacy_comments",
      "match": "\"\"\"Determine severity of legacy reference\"\"\"",
      "context": "\"\"\"Determine severity of legacy reference\"\"\"",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 112,
      "pattern": "\"\"\".*legacy.*\"\"\"",
      "category": "legacy_comments",
      "match": "\"\"\"Check for legacy directories\"\"\"",
      "context": "\"\"\"Check for legacy directories\"\"\"",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 142,
      "pattern": "\"\"\".*legacy.*\"\"\"",
      "category": "legacy_comments",
      "match": "\"\"\"Scan configuration files for legacy references\"\"\"",
      "context": "\"\"\"Scan configuration files for legacy references\"\"\"",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 161,
      "pattern": "\"\"\".*legacy.*\"\"\"",
      "category": "legacy_comments",
      "match": "\"\"\"Verify all import statements are clean of legacy references\"\"\"",
      "context": "\"\"\"Verify all import statements are clean of legacy references\"\"\"",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 193,
      "pattern": "\"\"\".*legacy.*\"\"\"",
      "category": "legacy_comments",
      "match": "\"\"\"Execute comprehensive legacy reference scan\"\"\"",
      "context": "\"\"\"Execute comprehensive legacy reference scan\"\"\"",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 275,
      "pattern": "\"\"\".*legacy.*\"\"\"",
      "category": "legacy_comments",
      "match": "\"\"\"Generate recommendations for legacy code cleanup\"\"\"",
      "context": "\"\"\"Generate recommendations for legacy code cleanup\"\"\"",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 313,
      "pattern": "\"\"\".*legacy.*\"\"\"",
      "category": "legacy_comments",
      "match": "\"\"\"Save legacy scan report\"\"\"",
      "context": "\"\"\"Save legacy scan report\"\"\"",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 22,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_references_found",
      "context": "'legacy_references_found': 0,",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 23,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_files_found",
      "context": "'legacy_files_found': 0,",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 24,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_imports_found",
      "context": "'legacy_imports_found': 0,",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 25,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions_found",
      "context": "'legacy_functions_found': 0,",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 26,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_patterns",
      "context": "'legacy_patterns': [],",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 33,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_patterns",
      "context": "self.legacy_patterns = {",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 34,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_keywords",
      "context": "'legacy_keywords': [",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 38,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_imports",
      "context": "'legacy_imports': [",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 42,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "'legacy_functions': [",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 46,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_comments",
      "context": "'legacy_comments': [",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 50,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_variables",
      "context": "'legacy_variables': [",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 54,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_directories",
      "context": "'legacy_directories': [",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 69,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_patterns",
      "context": "for pattern_category, patterns in self.legacy_patterns.items():",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 102,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_imports",
      "context": "if category in ['legacy_imports', 'legacy_functions']:",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 102,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "if category in ['legacy_imports', 'legacy_functions']:",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 104,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_keywords",
      "context": "elif category in ['legacy_keywords'] and any(indicator in match_text.lower() for indicator in high_severity_indicators):",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 106,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_comments",
      "context": "elif category in ['legacy_comments', 'legacy_variables']:",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 106,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_variables",
      "context": "elif category in ['legacy_comments', 'legacy_variables']:",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 113,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_dirs",
      "context": "legacy_dirs = []",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 121,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_term",
      "context": "if any(legacy_term in dir_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete', 'backup', 'archive', 'temp']):",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 121,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_term",
      "context": "if any(legacy_term in dir_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete', 'backup', 'archive', 'temp']):",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 122,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_dirs",
      "context": "legacy_dirs.append({",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 131,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_term",
      "context": "if any(legacy_term in file_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete']):",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 131,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_term",
      "context": "if any(legacy_term in file_name.lower() for legacy_term in ['legacy', 'old', 'deprecated', 'obsolete']):",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 132,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_dirs",
      "context": "legacy_dirs.append({",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 139,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_dirs",
      "context": "return legacy_dirs",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 243,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_references",
      "context": "legacy_references = len([f for f in findings if 'legacy' in f.get('match', '').lower()])",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 244,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_files",
      "context": "legacy_files = len(set(f.get('file', f.get('path', 'unknown')) for f in findings if f.get('type') == 'file'))",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 245,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_imports",
      "context": "legacy_imports = len([f for f in findings if f.get('category') == 'legacy_imports'])",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 245,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_imports",
      "context": "legacy_imports = len([f for f in findings if f.get('category') == 'legacy_imports'])",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 246,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "legacy_functions = len([f for f in findings if f.get('category') == 'legacy_functions'])",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 246,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "legacy_functions = len([f for f in findings if f.get('category') == 'legacy_functions'])",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 248,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_references_found",
      "context": "self.scan_report['legacy_references_found'] = len(findings)",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 249,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_files_found",
      "context": "self.scan_report['legacy_files_found'] = legacy_files",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 249,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_files",
      "context": "self.scan_report['legacy_files_found'] = legacy_files",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 250,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_imports_found",
      "context": "self.scan_report['legacy_imports_found'] = legacy_imports",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 250,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_imports",
      "context": "self.scan_report['legacy_imports_found'] = legacy_imports",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 251,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions_found",
      "context": "self.scan_report['legacy_functions_found'] = legacy_functions",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 251,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "self.scan_report['legacy_functions_found'] = legacy_functions",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 321,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan_report_",
      "context": "output_file = f\"legacy_reference_scan_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json\"",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 331,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_references_found",
      "context": "print(f\"Legacy References: {report['legacy_references_found']}\")",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 332,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_files_found",
      "context": "print(f\"Legacy Files: {report['legacy_files_found']}\")",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 333,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_imports_found",
      "context": "print(f\"Legacy Imports: {report['legacy_imports_found']}\")",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 334,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions_found",
      "context": "print(f\"Legacy Functions: {report['legacy_functions_found']}\")",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 55,
      "pattern": "legacy/",
      "category": "legacy_directories",
      "match": "legacy/",
      "context": "r'legacy/', r'old/', r'deprecated/', r'obsolete/',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 55,
      "pattern": "old/",
      "category": "legacy_directories",
      "match": "old/",
      "context": "r'legacy/', r'old/', r'deprecated/', r'obsolete/',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 55,
      "pattern": "deprecated/",
      "category": "legacy_directories",
      "match": "deprecated/",
      "context": "r'legacy/', r'old/', r'deprecated/', r'obsolete/',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 55,
      "pattern": "obsolete/",
      "category": "legacy_directories",
      "match": "obsolete/",
      "context": "r'legacy/', r'old/', r'deprecated/', r'obsolete/',",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 56,
      "pattern": "backup/",
      "category": "legacy_directories",
      "match": "backup/",
      "context": "r'backup/', r'archive/', r'temp/'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 56,
      "pattern": "archive/",
      "category": "legacy_directories",
      "match": "archive/",
      "context": "r'backup/', r'archive/', r'temp/'",
      "severity": "LOW"
    },
    {
      "file": "scripts/legacy_reference_scan.py",
      "line": 56,
      "pattern": "temp/",
      "category": "legacy_directories",
      "match": "temp/",
      "context": "r'backup/', r'archive/', r'temp/'",
      "severity": "LOW"
    },
    {
      "file": "scripts/coverage_analysis.py",
      "line": 47,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove duplicates and filter out __pycache__",
      "severity": "LOW"
    },
    {
      "file": "scripts/coverage_analysis.py",
      "line": 47,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove duplicates and filter out __pycache__",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/crdt_initialization.py",
      "line": 252,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_data_ignored",
      "context": "'old_data_ignored': True,",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/security_scan.py",
      "line": 149,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "(r'os\\.remove\\s*\\(', 'File deletion without validation'),",
      "severity": "LOW"
    },
    {
      "file": "scripts/gui_functionality_audit.py",
      "line": 216,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "\"name\": node.name[3:],  # Remove \"do_\" prefix",
      "severity": "LOW"
    },
    {
      "file": "scripts/gui_functionality_audit.py",
      "line": 216,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "\"name\": node.name[3:],  # Remove \"do_\" prefix",
      "severity": "MEDIUM"
    },
    {
      "file": "scripts/repair_databases.py",
      "line": 88,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove corrupted database",
      "severity": "LOW"
    },
    {
      "file": "scripts/repair_databases.py",
      "line": 89,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(db_path)",
      "severity": "LOW"
    },
    {
      "file": "scripts/repair_databases.py",
      "line": 101,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(dump_path)  # Clean up dump file",
      "severity": "LOW"
    },
    {
      "file": "scripts/repair_databases.py",
      "line": 114,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(db_path)",
      "severity": "LOW"
    },
    {
      "file": "scripts/repair_databases.py",
      "line": 88,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove corrupted database",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/vectordb/semantic_search.py",
      "line": 268,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove common stop words",
      "severity": "LOW"
    },
    {
      "file": "jarvis/vectordb/semantic_search.py",
      "line": 331,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "'delete': ['remove', 'eliminate', 'drop'],",
      "severity": "LOW"
    },
    {
      "file": "jarvis/vectordb/semantic_search.py",
      "line": 342,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "return list(set(variations))  # Remove duplicates",
      "severity": "LOW"
    },
    {
      "file": "jarvis/vectordb/semantic_search.py",
      "line": 268,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove common stop words",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/vectordb/semantic_search.py",
      "line": 342,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "return list(set(variations))  # Remove duplicates",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/vectordb/chroma_manager.py",
      "line": 166,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove from cache",
      "severity": "LOW"
    },
    {
      "file": "jarvis/vectordb/chroma_manager.py",
      "line": 166,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove from cache",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/ai/multimodal_processor.py",
      "line": 210,
      "pattern": "class.*Old",
      "category": "legacy_functions",
      "match": "Classify image (placehold",
      "context": "\"\"\"Classify image (placeholder for actual AI integration)\"\"\"",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/ai/multimodal_processor.py",
      "line": 225,
      "pattern": "class.*Old",
      "category": "legacy_functions",
      "match": "Classify audio content (placehold",
      "context": "\"\"\"Classify audio content (placeholder for actual AI integration)\"\"\"",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/documentation_generator.py",
      "line": 1089,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Immediate sync for high priority or old data",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/documentation_generator.py",
      "line": 965,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "### 4. ORSet (Observed-Remove Set)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/documentation_generator.py",
      "line": 969,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "- Operation: add(element, tag) | remove(element, observed_tags)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/documentation_generator.py",
      "line": 983,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "def remove(self, element: Any):",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/documentation_generator.py",
      "line": 984,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "\"\"\"Remove element by marking all observed tags as removed\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/documentation_generator.py",
      "line": 1060,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "4. **Add/Remove Conflicts**: Observed-remove semantics handle concurrent operations",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/documentation_generator.py",
      "line": 1060,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "4. **Add/Remove Conflicts**: Observed-remove semantics handle concurrent operations",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/documentation_generator.py",
      "line": 965,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "### 4. ORSet (Observed-Remove",
      "context": "### 4. ORSet (Observed-Remove Set)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/agent_workflow.py",
      "line": 737,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "return list(set(corrections))  # Remove duplicates",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/agent_workflow.py",
      "line": 737,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "return list(set(corrections))  # Remove duplicates",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/advanced_network_topology.py",
      "line": 426,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Clear old routes",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/advanced_network_topology.py",
      "line": 161,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "\"\"\"Remove a node from the network\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/advanced_network_topology.py",
      "line": 181,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "print(f\"[ERROR] Failed to remove node {node_id}: {e}\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/advanced_network_topology.py",
      "line": 268,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove from all routing tables",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/advanced_network_topology.py",
      "line": 272,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove references from other nodes",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/advanced_network_topology.py",
      "line": 275,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "other_node_routes.remove(node_id)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/advanced_network_topology.py",
      "line": 268,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove from all routing tables",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/advanced_network_topology.py",
      "line": 272,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove references from other nodes",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/backup_recovery.py",
      "line": 435,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Clean up old backups based on retention policy\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/backup_recovery.py",
      "line": 461,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Remove old backups",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/backup_recovery.py",
      "line": 467,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "print(f\"[INFO] Removed old backup: {backup_id}\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/backup_recovery.py",
      "line": 213,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove uncompressed directory",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/backup_recovery.py",
      "line": 461,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove old backups",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/backup_recovery.py",
      "line": 466,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(backup_info.backup_path)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/backup_recovery.py",
      "line": 471,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "print(f\"[ERROR] Failed to remove backup {backup_id}: {e}\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/backup_recovery.py",
      "line": 433,
      "pattern": "def.*old_",
      "category": "legacy_functions",
      "match": "def cleanup_old_",
      "context": "def cleanup_old_backups(self, days_to_keep: int = 30,",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/backup_recovery.py",
      "line": 213,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove uncompressed directory",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/backup_recovery.py",
      "line": 461,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove old backups",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt_manager.py",
      "line": 289,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Clean up old tombstones in OR-Set.\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt_manager.py",
      "line": 241,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "\"\"\"Remove element from OR-Set.\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt_manager.py",
      "line": 245,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "removed = or_set.remove(element)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/distributed_agent_coordinator.py",
      "line": 467,
      "pattern": "from.*old",
      "category": "legacy_imports",
      "match": "from {old",
      "context": "print(f\"[COORDINATOR] Reassigned task {task.task_id} from {old_agent_id} to {new_agent.agent_id}\")",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/distributed_agent_coordinator.py",
      "line": 449,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_agent_id",
      "context": "old_agent_id = task.assigned_agents[0] if task.assigned_agents else None",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/distributed_agent_coordinator.py",
      "line": 458,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_agent_id",
      "context": "\"old_agent_id\": old_agent_id,",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/distributed_agent_coordinator.py",
      "line": 458,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_agent_id",
      "context": "\"old_agent_id\": old_agent_id,",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/distributed_agent_coordinator.py",
      "line": 467,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_agent_id",
      "context": "print(f\"[COORDINATOR] Reassigned task {task.task_id} from {old_agent_id} to {new_agent.agent_id}\")",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/performance_monitor.py",
      "line": 177,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Clean old data",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/performance_monitor.py",
      "line": 532,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Clean up old performance data\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/performance_monitor.py",
      "line": 536,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Remove old metrics",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/performance_monitor.py",
      "line": 536,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove old metrics",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/performance_monitor.py",
      "line": 531,
      "pattern": "def.*old_",
      "category": "legacy_functions",
      "match": "def _cleanup_old_",
      "context": "def _cleanup_old_data(self):",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/performance_monitor.py",
      "line": 536,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove old metrics",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 28,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Manages purging of old archive data based on version and retention policies\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 270,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Get old entries that could be purged",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 454,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "print(\"[PURGE] No old version entries found - archive is clean!\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 467,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "print(f\"[PURGE] Found {len(old_version_entries)} entries from old versions to remove\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 516,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "print(f\"[PURGE] Successfully removed {purge_stats['purged_count']} entries from {len(versions_being_removed)} old versions\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 526,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Clean up old version backups",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 577,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "print(f\"[PURGE] Removed old backup: {filename}\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 591,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Automatically purge old data on system startup - now uses version-only cleanup\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 626,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "recommendations.append(\"Consider purging old version data - more than 10 versions detected\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 397,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "# Also remove from verification queue",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 403,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove from archive entries",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 467,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "print(f\"[PURGE] Found {len(old_version_entries)} entries from old versions to remove\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 491,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove entries in batches for performance",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 501,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove from verification queue first",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 507,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove from archive entries",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 573,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove backups older than 7 days (likely from older versions)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 575,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(file_path)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 425,
      "pattern": "from.*old",
      "category": "legacy_imports",
      "match": "from old",
      "context": "\"\"\"Automatically purge ALL data from older versions - version-based cleanup only\"\"\"",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 467,
      "pattern": "from.*old",
      "category": "legacy_imports",
      "match": "from old",
      "context": "print(f\"[PURGE] Found {len(old_version_entries)} entries from old versions to remove\")",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 516,
      "pattern": "from.*old",
      "category": "legacy_imports",
      "match": "from {len(versions_being_removed)} old",
      "context": "print(f\"[PURGE] Successfully removed {purge_stats['purged_count']} entries from {len(versions_being_removed)} old versions\")",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 552,
      "pattern": "from.*old",
      "category": "legacy_imports",
      "match": "from old",
      "context": "\"\"\"Clean up backup files from older versions\"\"\"",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 573,
      "pattern": "from.*old",
      "category": "legacy_imports",
      "match": "from old",
      "context": "# Remove backups older than 7 days (likely from older versions)",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 652,
      "pattern": "from.*old",
      "category": "legacy_imports",
      "match": "from old",
      "context": "\"\"\"Run version-only cleanup - removes all data from older versions\"\"\"",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 551,
      "pattern": "def.*old_",
      "category": "legacy_functions",
      "match": "def _cleanup_old_",
      "context": "def _cleanup_old_version_backups(self):",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 526,
      "pattern": "#.*old version",
      "category": "legacy_comments",
      "match": "# Clean up old version",
      "context": "# Clean up old version backups",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 397,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Also remove",
      "context": "# Also remove from verification queue",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 403,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove from archive entries",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 491,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove entries in batches for performance",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 501,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove from verification queue first",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 507,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove from archive entries",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 573,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove backups older than 7 days (likely from older versions)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 316,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_entries",
      "context": "old_entries = cursor.fetchall()",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 329,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_entries",
      "context": "for entry in old_entries:",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 439,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_version_entries",
      "context": "old_version_entries = []",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 450,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_version_entries",
      "context": "old_version_entries = cursor.fetchall()",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 453,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_version_entries",
      "context": "if not old_version_entries:",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 467,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_version_entries",
      "context": "print(f\"[PURGE] Found {len(old_version_entries)} entries from old versions to remove\")",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 479,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_version_entries",
      "context": "'total_identified': len(old_version_entries),",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 492,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_version_entries",
      "context": "entry_ids = [entry[0] for entry in old_version_entries]",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/archive_purge_manager.py",
      "line": 493,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_version_entries",
      "context": "versions_being_removed = set(entry[1] for entry in old_version_entries)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/data_archiver.py",
      "line": 245,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove any remaining corrupted file",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/data_archiver.py",
      "line": 247,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(self.db_path)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/data_archiver.py",
      "line": 254,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "# Try to remove the corrupted file anyway",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/data_archiver.py",
      "line": 257,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(self.db_path)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/data_archiver.py",
      "line": 397,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove from verification queue if verification is complete",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/data_archiver.py",
      "line": 245,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove any remaining corrupted file",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/data_archiver.py",
      "line": 254,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Try to remove",
      "context": "# Try to remove the corrupted file anyway",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/data_archiver.py",
      "line": 397,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove from verification queue if verification is complete",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/ml_integration_system.py",
      "line": 144,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "\"remove\": 0.4,",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/main.py",
      "line": 364,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "print(f\"[PURGE] Version cleanup: {entries_removed} old entries removed, {backups_cleaned} old backups cleaned\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/main.py",
      "line": 364,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "print(f\"[PURGE] Version cleanup: {entries_removed} old entries removed, {backups_cleaned} old backups cleaned\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/main.py",
      "line": 370,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "print(\"[PURGE] Archive is clean - no old version data found\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/main.py",
      "line": 485,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_entries",
      "context": "old_entries = chat_history[:25]",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/main.py",
      "line": 486,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_entries",
      "context": "simple_log_to_file(old_entries, \"old_session.json\")",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/main.py",
      "line": 486,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_session",
      "context": "simple_log_to_file(old_entries, \"old_session.json\")",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/distributed_memory_system.py",
      "line": 304,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Clean up old inactive sessions\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/distributed_memory_system.py",
      "line": 319,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "print(f\"[MEMORY] Cleaned up {cleaned_count} old sessions\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/distributed_memory_system.py",
      "line": 303,
      "pattern": "def.*old_",
      "category": "legacy_functions",
      "match": "def cleanup_old_",
      "context": "def cleanup_old_sessions(self, max_age_hours: int = 24) -> int:",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/utils/logs.py",
      "line": 150,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove all JSON files in log directory",
      "severity": "LOW"
    },
    {
      "file": "jarvis/utils/logs.py",
      "line": 154,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(filepath)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/utils/logs.py",
      "line": 150,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove all JSON files in log directory",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/llm/production_llm.py",
      "line": 307,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Remove old requests (older than 1 minute)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/llm/production_llm.py",
      "line": 268,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove expired cache entry",
      "severity": "LOW"
    },
    {
      "file": "jarvis/llm/production_llm.py",
      "line": 290,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove oldest entries",
      "severity": "LOW"
    },
    {
      "file": "jarvis/llm/production_llm.py",
      "line": 307,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove old requests (older than 1 minute)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/llm/production_llm.py",
      "line": 268,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove expired cache entry",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/llm/production_llm.py",
      "line": 290,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove oldest entries",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/llm/production_llm.py",
      "line": 307,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove old requests (older than 1 minute)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/llm/production_llm.py",
      "line": 295,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_key",
      "context": "for old_key, _ in sorted_cache[:100]:",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/llm/production_llm.py",
      "line": 296,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_key",
      "context": "self.response_cache.pop(old_key, None)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/backend/__init__.py",
      "line": 219,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove oldest session",
      "severity": "LOW"
    },
    {
      "file": "jarvis/backend/__init__.py",
      "line": 219,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove oldest session",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/deployment/deployment_manager.py",
      "line": 269,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove Kubernetes resources",
      "severity": "LOW"
    },
    {
      "file": "jarvis/deployment/deployment_manager.py",
      "line": 269,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove Kubernetes resources",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/monitoring/realtime_metrics.py",
      "line": 336,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Clean up old metric data\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/monitoring/realtime_metrics.py",
      "line": 1043,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Clean up old data periodically",
      "severity": "LOW"
    },
    {
      "file": "jarvis/monitoring/realtime_metrics.py",
      "line": 515,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "self.clients.remove(websocket)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/monitoring/realtime_metrics.py",
      "line": 585,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove disconnected clients",
      "severity": "LOW"
    },
    {
      "file": "jarvis/monitoring/realtime_metrics.py",
      "line": 623,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove disconnected clients",
      "severity": "LOW"
    },
    {
      "file": "jarvis/monitoring/realtime_metrics.py",
      "line": 335,
      "pattern": "def.*old_",
      "category": "legacy_functions",
      "match": "def cleanup_old_",
      "context": "def cleanup_old_data(self, hours_to_keep: int = 168):  # 7 days default",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/monitoring/realtime_metrics.py",
      "line": 585,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove disconnected clients",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/monitoring/realtime_metrics.py",
      "line": 623,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove disconnected clients",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/monitoring/system_health.py",
      "line": 188,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Clean up old health data\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/monitoring/system_health.py",
      "line": 650,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Cleanup old data periodically",
      "severity": "LOW"
    },
    {
      "file": "jarvis/monitoring/system_health.py",
      "line": 478,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(filepath)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/monitoring/system_health.py",
      "line": 1316,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "self.websocket_clients.remove(websocket)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/monitoring/system_health.py",
      "line": 1373,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove disconnected clients",
      "severity": "LOW"
    },
    {
      "file": "jarvis/monitoring/system_health.py",
      "line": 187,
      "pattern": "def.*old_",
      "category": "legacy_functions",
      "match": "def cleanup_old_",
      "context": "def cleanup_old_data(self, days_to_keep: int = 30):",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/monitoring/system_health.py",
      "line": 1373,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove disconnected clients",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/security/compliance_validator.py",
      "line": 997,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove duplicates and limit recommendations",
      "severity": "LOW"
    },
    {
      "file": "jarvis/security/compliance_validator.py",
      "line": 997,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove duplicates and limit recommendations",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/security/encryption_manager.py",
      "line": 421,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Deactivate old key (don't delete for decryption of existing data)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/security/encryption_manager.py",
      "line": 413,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_key",
      "context": "old_key = self.encryption_keys[key_id]",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/security/encryption_manager.py",
      "line": 417,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_key",
      "context": "purpose=old_key.purpose,",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/security/encryption_manager.py",
      "line": 418,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_key",
      "context": "algorithm=old_key.algorithm",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/security/encryption_manager.py",
      "line": 422,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_key",
      "context": "old_key.is_active = False",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/security/encryption_manager.py",
      "line": 427,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_key",
      "context": "old_key.algorithm,",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/security/audit_logger.py",
      "line": 176,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_file",
      "context": "old_file = self.log_file_path.with_suffix(f'.{i}.log')",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/security/audit_logger.py",
      "line": 179,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_file",
      "context": "if old_file.exists():",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/security/audit_logger.py",
      "line": 182,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_file",
      "context": "old_file.rename(new_file)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/api/enhanced_api.py",
      "line": 66,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "self.active_connections.remove(websocket)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/api/enhanced_api.py",
      "line": 89,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "self.active_connections.remove(connection)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/memory/production_memory.py",
      "line": 591,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove oldest entries (simple approach)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/memory/production_memory.py",
      "line": 591,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove oldest entries (simple approach)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 409,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Clean up old, low-importance entries.\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 416,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Delete low-importance, old entries",
      "severity": "LOW"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 143,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove the file to force recreation",
      "severity": "LOW"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 145,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(self.db_path)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 149,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "# Try to remove the corrupted file anyway",
      "severity": "LOW"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 152,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(self.db_path)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 397,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove from cache",
      "severity": "LOW"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 660,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "# Sort by last accessed time and remove oldest",
      "severity": "LOW"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 416,
      "pattern": "import.*old",
      "category": "legacy_imports",
      "match": "importance, old",
      "context": "# Delete low-importance, old entries",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 408,
      "pattern": "def.*old_",
      "category": "legacy_functions",
      "match": "def cleanup_old_",
      "context": "def cleanup_old_entries(self, days: int = 30) -> Dict[str, int]:",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 143,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove the file to force recreation",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 149,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Try to remove",
      "context": "# Try to remove the corrupted file anyway",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 397,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove from cache",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/memory/memory_manager.py",
      "line": 660,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Sort by last accessed time and remove",
      "context": "# Sort by last accessed time and remove oldest",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/memory/memory.py",
      "line": 63,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "os.remove(temp_file)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/evolution/__init__.py",
      "line": 3,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "# Legacy evolution tracking (for backward compatibility)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/evolution/__init__.py",
      "line": 37,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "# Legacy orchestrator (for backward compatibility)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/evolution/__init__.py",
      "line": 50,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "# Legacy evolution tracking (backward compatibility)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/evolution/__init__.py",
      "line": 78,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "# Legacy orchestration (backward compatibility)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/evolution/__init__.py",
      "line": 3,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Legacy",
      "context": "# Legacy evolution tracking (for backward compatibility)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/evolution/__init__.py",
      "line": 37,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Legacy",
      "context": "# Legacy orchestrator (for backward compatibility)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/evolution/__init__.py",
      "line": 50,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Legacy",
      "context": "# Legacy evolution tracking (backward compatibility)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/evolution/__init__.py",
      "line": 78,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Legacy",
      "context": "# Legacy orchestration (backward compatibility)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/evolution/functional_data_manager.py",
      "line": 149,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Check file age (warn if very old)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/evolution/functional_data_manager.py",
      "line": 153,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "issues.append(f\"File is {age_days:.0f} days old, may need update\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/evolution/functional_data_manager.py",
      "line": 359,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "for component in set(components):  # Remove duplicates",
      "severity": "LOW"
    },
    {
      "file": "jarvis/evolution/functional_data_manager.py",
      "line": 359,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "for component in set(components):  # Remove duplicates",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/__init__.py",
      "line": 17,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "- ORSet: Observed-Remove set for dynamic collections",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/crdt_network.py",
      "line": 361,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove failed connection",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/crdt_network.py",
      "line": 424,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "\"\"\"Remove peers that haven't been seen recently\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/crdt_network.py",
      "line": 361,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove failed connection",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 275,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "Clean up old tombstone records (removed tags).",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 287,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Find old removed tags to clean up",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 301,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "# Remove old tombstones",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 2,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "OR-Set (Observed-Remove Set) CRDT Implementation",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 5,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "Provides add/remove semantics with conflict-free merging.",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 18,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "Observed-Remove Set CRDT implementation.",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 47,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "def remove(self, element: Any) -> bool:",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 49,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "Remove an element from the set.",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 52,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "element: Element to remove",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 278,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "cutoff_time: Remove tombstones older than this timestamp",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 301,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove old tombstones",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 27,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# set of remove",
      "context": "self.removed: Set[str] = set()  # set of removed tags",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 60,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Mark all tags for this element as remove",
      "context": "# Mark all tags for this element as removed",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 82,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Element is present if it has any tags not in remove",
      "context": "# Element is present if it has any tags not in removed set",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 132,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Merge remove",
      "context": "# Merge removed tags",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 185,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Reconstruct remove",
      "context": "# Reconstruct removed tags",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 220,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Reconstruct remove",
      "context": "# Reconstruct removed tags",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 253,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Reconstruct remove",
      "context": "# Reconstruct removed tags",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 287,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Find old remove",
      "context": "# Find old removed tags to clean up",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 301,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove old tombstones",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 288,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_removed",
      "context": "old_removed = set()",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 296,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_removed",
      "context": "old_removed.add(tag)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 302,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_removed",
      "context": "self.removed -= old_removed",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/or_set.py",
      "line": 304,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_removed",
      "context": "return len(old_removed)",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/specialized_types.py",
      "line": 66,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove oldest entries",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/specialized_types.py",
      "line": 234,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "\"\"\"Remove vertex and all its edges.\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/specialized_types.py",
      "line": 239,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove vertex",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/specialized_types.py",
      "line": 240,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "self.vertices.remove(vertex_id)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/specialized_types.py",
      "line": 242,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove all edges connected to this vertex",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/specialized_types.py",
      "line": 249,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "self.edges.remove(edge)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/specialized_types.py",
      "line": 287,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "\"\"\"Remove edge between vertices.\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/specialized_types.py",
      "line": 294,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "self.edges.remove(edge)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/specialized_types.py",
      "line": 66,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove oldest entries",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/specialized_types.py",
      "line": 239,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove vertex",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/specialized_types.py",
      "line": 242,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove all edges connected to this vertex",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/pn_counter.py",
      "line": 212,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove node from both counters",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/pn_counter.py",
      "line": 212,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove node from both counters",
      "severity": "MEDIUM"
    },
    {
      "file": "jarvis/core/crdt/crdt_conflict_resolver.py",
      "line": 642,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"\"\"Clean up old resolved conflicts\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/crdt_conflict_resolver.py",
      "line": 654,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "logger.info(f\"Cleaned up {cleaned_count} old resolved conflicts\")",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/crdt_conflict_resolver.py",
      "line": 547,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "\"\"\"Remove a resolution rule\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/crdt/crdt_conflict_resolver.py",
      "line": 641,
      "pattern": "def.*old_",
      "category": "legacy_functions",
      "match": "def cleanup_old_",
      "context": "def cleanup_old_conflicts(self, max_age_days: int = 30):",
      "severity": "HIGH"
    },
    {
      "file": "jarvis/core/config/__init__.py",
      "line": 390,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "\"\"\"Remove configuration change watcher\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/config/__init__.py",
      "line": 392,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "self.watchers.remove(callback)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/errors/__init__.py",
      "line": 370,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "\"\"\"Remove error event listener\"\"\"",
      "severity": "LOW"
    },
    {
      "file": "jarvis/core/errors/__init__.py",
      "line": 372,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "self.error_listeners.remove(listener)",
      "severity": "LOW"
    },
    {
      "file": "jarvis/llm/providers/openai_provider.py",
      "line": 348,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Remove stream parameter for regular completion",
      "severity": "LOW"
    },
    {
      "file": "jarvis/llm/providers/openai_provider.py",
      "line": 348,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Remove",
      "context": "# Remove stream parameter for regular completion",
      "severity": "MEDIUM"
    },
    {
      "file": "gui/enhanced/comprehensive_dashboard.py",
      "line": 168,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "# Legacy tabs for backward compatibility (will be integrated into new architecture)",
      "severity": "LOW"
    },
    {
      "file": "gui/enhanced/comprehensive_dashboard.py",
      "line": 168,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Legacy",
      "context": "# Legacy tabs for backward compatibility (will be integrated into new architecture)",
      "severity": "MEDIUM"
    },
    {
      "file": "gui/enhanced/comprehensive_dashboard.py",
      "line": 1281,
      "pattern": "archive/",
      "category": "legacy_directories",
      "match": "archive/",
      "context": "POST /api/v1/archive/data",
      "severity": "LOW"
    },
    {
      "file": "gui/enhanced/comprehensive_dashboard.py",
      "line": 1283,
      "pattern": "archive/",
      "category": "legacy_directories",
      "match": "archive/",
      "context": "GET /api/v1/archive/stats",
      "severity": "LOW"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 48667,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "\"category\": \"Legacy Elimination\",",
      "severity": "LOW"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 48668,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"issue\": \"32 legacy functions found\",",
      "severity": "LOW"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 48669,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"recommendation\": \"Remove or refactor all legacy functions\",",
      "severity": "LOW"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 12610,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "\"name\": \"ORSet.remove\",",
      "severity": "LOW"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 12690,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "\"name\": \"remove\",",
      "severity": "LOW"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 38513,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "\"name\": \"ORSet.remove\",",
      "severity": "LOW"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 42059,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "\"name\": \"remove\",",
      "severity": "LOW"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 48669,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "\"recommendation\": \"Remove or refactor all legacy functions\",",
      "severity": "LOW"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 7,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functions",
      "context": "\"legacy_functions\": 32,",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4392,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4397,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4402,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4407,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4412,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4417,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4422,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4427,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4432,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4437,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4442,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4447,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4452,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4457,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4462,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4467,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4472,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4477,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4482,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4487,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 4492,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 25267,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 25276,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 25285,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 25294,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 25303,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 25312,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 25321,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 25330,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 25339,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 25348,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 27157,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 28057,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 30289,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 31225,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 31378,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 31666,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 31720,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 31738,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 31765,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 31774,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "functionality_audit_report_20250807_111617.json",
      "line": 32305,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"file\": \"scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "gui_functionality_audit_20250807_100407.json",
      "line": 7702,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "\"name\": \"remove\",",
      "severity": "LOW"
    },
    {
      "file": "gui_functionality_audit_20250807_100407.json",
      "line": 7800,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "\"name\": \"remove\",",
      "severity": "LOW"
    },
    {
      "file": "gui_functionality_audit_20250807_100407.json",
      "line": 19731,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "remove",
      "context": "\"function\": \"remove\",",
      "severity": "LOW"
    },
    {
      "file": "performance_benchmarks_20250807_103346.json",
      "line": 106,
      "pattern": "import.*old",
      "category": "legacy_imports",
      "match": "import_regression_threshold",
      "context": "\"import_regression_threshold\": 0.0,",
      "severity": "HIGH"
    },
    {
      "file": "stage4_validation_report.json",
      "line": 65,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"output\": \"\\ud83c\\udfaf Stage 4: Documentation Consistency Validation\\n============================================================\\n\\ud83d\\udd0d Validating Documentation Consistency...\\n\\n\\ud83d\\udcca Documentation Consistency Results:\\n\\u2705 Stage References: PASS\\n\\u2705 Version Consistency: FAIL\\n\\u2705 Function Counts: 3 files with references\\n\\u2705 Cross References: 19 total\\n\\u2705 Script References: 97 total\\n\\n\\ud83c\\udfaf Overall Status: FAIL (60.0%)\\n\\n\\u26a0\\ufe0f Missing Scripts:\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_repo_structure.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_legacy_removal.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_error_prevention.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_gui_completeness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/quality_gate_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_benchmark.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_information_integrity.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/check_naming_conventions.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/sync_documentation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_mapping.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_functionality_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_reference_scan.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/regression_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/coverage_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_experience_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/regression_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/coverage_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validation_framework_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_comprehensive_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_accessibility_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/pipeline_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/metrics_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/failure_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/technical_debt_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_elimination_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/architecture_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/design_pattern_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/technical_debt_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/architecture_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/design_pattern_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_experience_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/cli_dependency_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_professional_standards.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/error_prevention_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_help_system_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/usability_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/user_journey_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_final.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_optimization.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/final_legacy_scan.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_security_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/security_hardening.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_optimization.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/security_hardening.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_gui_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_deployment_automation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_final_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_monitoring_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_acceptance_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_elimination_cert.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_excellence_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/deployment_automation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/monitoring_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/excellence_metrics.py\\n   \\u2022 ERROR_REGISTRY.md references missing scripts/validate_error_prevention.py\\n   \\u2022 ERROR_REGISTRY.md references missing scripts/validate_gui_completeness.py\\n\\n\\ud83d\\udd0d Validating Markdown Structure...\\n\\u2705 Markdown Structure Issues: 1\\n   \\u274c SYSTEMATIC_ENGINEERING_PLAN.md: Heading level jump from h1 to h3\\n\\n============================================================\\n\\ud83c\\udfaf Stage 4 Documentation Consistency: \\u274c FAIL\\n\\u26a0\\ufe0f Documentation consistency issues detected - please resolve before proceeding.\\n\",",
      "severity": "MEDIUM"
    },
    {
      "file": "stage4_validation_report.json",
      "line": 65,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_elimination_check",
      "context": "\"output\": \"\\ud83c\\udfaf Stage 4: Documentation Consistency Validation\\n============================================================\\n\\ud83d\\udd0d Validating Documentation Consistency...\\n\\n\\ud83d\\udcca Documentation Consistency Results:\\n\\u2705 Stage References: PASS\\n\\u2705 Version Consistency: FAIL\\n\\u2705 Function Counts: 3 files with references\\n\\u2705 Cross References: 19 total\\n\\u2705 Script References: 97 total\\n\\n\\ud83c\\udfaf Overall Status: FAIL (60.0%)\\n\\n\\u26a0\\ufe0f Missing Scripts:\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_repo_structure.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_legacy_removal.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_error_prevention.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_gui_completeness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/quality_gate_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_benchmark.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_information_integrity.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/check_naming_conventions.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/sync_documentation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_mapping.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_functionality_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_reference_scan.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/regression_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/coverage_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_experience_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/regression_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/coverage_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validation_framework_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_comprehensive_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_accessibility_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/pipeline_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/metrics_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/failure_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/technical_debt_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_elimination_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/architecture_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/design_pattern_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/technical_debt_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/architecture_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/design_pattern_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_experience_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/cli_dependency_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_professional_standards.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/error_prevention_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_help_system_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/usability_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/user_journey_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_final.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_optimization.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/final_legacy_scan.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_security_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/security_hardening.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_optimization.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/security_hardening.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_gui_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_deployment_automation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_final_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_monitoring_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_acceptance_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_elimination_cert.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_excellence_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/deployment_automation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/monitoring_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/excellence_metrics.py\\n   \\u2022 ERROR_REGISTRY.md references missing scripts/validate_error_prevention.py\\n   \\u2022 ERROR_REGISTRY.md references missing scripts/validate_gui_completeness.py\\n\\n\\ud83d\\udd0d Validating Markdown Structure...\\n\\u2705 Markdown Structure Issues: 1\\n   \\u274c SYSTEMATIC_ENGINEERING_PLAN.md: Heading level jump from h1 to h3\\n\\n============================================================\\n\\ud83c\\udfaf Stage 4 Documentation Consistency: \\u274c FAIL\\n\\u26a0\\ufe0f Documentation consistency issues detected - please resolve before proceeding.\\n\",",
      "severity": "MEDIUM"
    },
    {
      "file": "stage4_validation_report.json",
      "line": 65,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functionality_audit",
      "context": "\"output\": \"\\ud83c\\udfaf Stage 4: Documentation Consistency Validation\\n============================================================\\n\\ud83d\\udd0d Validating Documentation Consistency...\\n\\n\\ud83d\\udcca Documentation Consistency Results:\\n\\u2705 Stage References: PASS\\n\\u2705 Version Consistency: FAIL\\n\\u2705 Function Counts: 3 files with references\\n\\u2705 Cross References: 19 total\\n\\u2705 Script References: 97 total\\n\\n\\ud83c\\udfaf Overall Status: FAIL (60.0%)\\n\\n\\u26a0\\ufe0f Missing Scripts:\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_repo_structure.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_legacy_removal.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_error_prevention.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_gui_completeness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/quality_gate_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_benchmark.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_information_integrity.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/check_naming_conventions.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/sync_documentation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_mapping.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_functionality_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_reference_scan.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/regression_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/coverage_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_experience_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/regression_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/coverage_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validation_framework_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_comprehensive_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_accessibility_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/pipeline_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/metrics_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/failure_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/technical_debt_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_elimination_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/architecture_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/design_pattern_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/technical_debt_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/architecture_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/design_pattern_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_experience_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/cli_dependency_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_professional_standards.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/error_prevention_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_help_system_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/usability_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/user_journey_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_final.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_optimization.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/final_legacy_scan.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_security_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/security_hardening.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_optimization.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/security_hardening.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_gui_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_deployment_automation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_final_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_monitoring_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_acceptance_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_elimination_cert.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_excellence_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/deployment_automation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/monitoring_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/excellence_metrics.py\\n   \\u2022 ERROR_REGISTRY.md references missing scripts/validate_error_prevention.py\\n   \\u2022 ERROR_REGISTRY.md references missing scripts/validate_gui_completeness.py\\n\\n\\ud83d\\udd0d Validating Markdown Structure...\\n\\u2705 Markdown Structure Issues: 1\\n   \\u274c SYSTEMATIC_ENGINEERING_PLAN.md: Heading level jump from h1 to h3\\n\\n============================================================\\n\\ud83c\\udfaf Stage 4 Documentation Consistency: \\u274c FAIL\\n\\u26a0\\ufe0f Documentation consistency issues detected - please resolve before proceeding.\\n\",",
      "severity": "MEDIUM"
    },
    {
      "file": "stage4_validation_report.json",
      "line": 65,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_elimination_cert",
      "context": "\"output\": \"\\ud83c\\udfaf Stage 4: Documentation Consistency Validation\\n============================================================\\n\\ud83d\\udd0d Validating Documentation Consistency...\\n\\n\\ud83d\\udcca Documentation Consistency Results:\\n\\u2705 Stage References: PASS\\n\\u2705 Version Consistency: FAIL\\n\\u2705 Function Counts: 3 files with references\\n\\u2705 Cross References: 19 total\\n\\u2705 Script References: 97 total\\n\\n\\ud83c\\udfaf Overall Status: FAIL (60.0%)\\n\\n\\u26a0\\ufe0f Missing Scripts:\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_repo_structure.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_legacy_removal.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_error_prevention.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_gui_completeness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/quality_gate_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_benchmark.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validate_information_integrity.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/check_naming_conventions.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/sync_documentation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_mapping.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_functionality_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_reference_scan.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/regression_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/coverage_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_experience_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/regression_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/coverage_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/validation_framework_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_comprehensive_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_accessibility_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/pipeline_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/metrics_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/failure_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/technical_debt_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_elimination_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_functionality_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/architecture_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/design_pattern_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/technical_debt_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/architecture_analysis.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/dependency_audit.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/design_pattern_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_experience_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/cli_dependency_check.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_professional_standards.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/error_prevention_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_help_system_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/usability_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/user_journey_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_performance_final.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_optimization.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/final_legacy_scan.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_security_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/security_hardening.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/integration_test_suite.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/performance_optimization.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/reliability_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/security_hardening.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_gui_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_deployment_automation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_final_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_monitoring_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_user_acceptance_test.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_elimination_cert.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/gui_excellence_metrics.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/production_readiness.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/deployment_automation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/monitoring_validation.py\\n   \\u2022 SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/excellence_metrics.py\\n   \\u2022 ERROR_REGISTRY.md references missing scripts/validate_error_prevention.py\\n   \\u2022 ERROR_REGISTRY.md references missing scripts/validate_gui_completeness.py\\n\\n\\ud83d\\udd0d Validating Markdown Structure...\\n\\u2705 Markdown Structure Issues: 1\\n   \\u274c SYSTEMATIC_ENGINEERING_PLAN.md: Heading level jump from h1 to h3\\n\\n============================================================\\n\\ud83c\\udfaf Stage 4 Documentation Consistency: \\u274c FAIL\\n\\u26a0\\ufe0f Documentation consistency issues detected - please resolve before proceeding.\\n\",",
      "severity": "MEDIUM"
    },
    {
      "file": "stage1_validation_report_20250807_095108.json",
      "line": 4,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "\"title\": \"Repository Archaeological Analysis & Complete Legacy Elimination\",",
      "severity": "LOW"
    },
    {
      "file": "stage1_validation_report_20250807_095108.json",
      "line": 6,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_elimination",
      "context": "\"legacy_elimination\": {",
      "severity": "MEDIUM"
    },
    {
      "file": "stage1_validation_report_20250807_094935.json",
      "line": 4,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "\"title\": \"Repository Archaeological Analysis & Complete Legacy Elimination\",",
      "severity": "LOW"
    },
    {
      "file": "stage1_validation_report_20250807_094935.json",
      "line": 6,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_elimination",
      "context": "\"legacy_elimination\": {",
      "severity": "MEDIUM"
    },
    {
      "file": "performance_thresholds.json",
      "line": 2,
      "pattern": "import.*old",
      "category": "legacy_imports",
      "match": "import_regression_threshold",
      "context": "\"import_regression_threshold\": 0.0,",
      "severity": "HIGH"
    },
    {
      "file": "gui_completeness_validation_20250807_100416.json",
      "line": 100,
      "pattern": "backup/",
      "category": "legacy_directories",
      "match": "Backup/",
      "context": "\"Backup/restore interface\"",
      "severity": "LOW"
    },
    {
      "file": "error_pattern_analysis_20250807_100358.json",
      "line": 37,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "\"message\": \"Fix Critical Legacy Structure Issues and Restore Missing 9-Tab Professional Dashboard\",",
      "severity": "LOW"
    },
    {
      "file": "error_pattern_analysis_20250807_100358.json",
      "line": 42,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"message\": \"Fix critical legacy structure issues and restore 9-tab professional dashboard\",",
      "severity": "LOW"
    },
    {
      "file": "error_pattern_analysis_20250807_100358.json",
      "line": 47,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "\"message\": \"Analyze legacy structure and GUI loading issues\",",
      "severity": "LOW"
    },
    {
      "file": "error_pattern_analysis_20250807_100358.json",
      "line": 1458,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_code_risk",
      "context": "\"legacy_code_risk\": \"NONE\",",
      "severity": "MEDIUM"
    },
    {
      "file": "stage1_validation_report_20250807_095037.json",
      "line": 4,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "\"title\": \"Repository Archaeological Analysis & Complete Legacy Elimination\",",
      "severity": "LOW"
    },
    {
      "file": "stage1_validation_report_20250807_095037.json",
      "line": 6,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_elimination",
      "context": "\"legacy_elimination\": {",
      "severity": "MEDIUM"
    },
    {
      "file": "documentation_consistency_report.json",
      "line": 303,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "documentation_consistency_report.json",
      "line": 320,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_elimination_check",
      "context": "\"legacy_elimination_check.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "documentation_consistency_report.json",
      "line": 321,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functionality_audit",
      "context": "\"legacy_functionality_audit.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "documentation_consistency_report.json",
      "line": 354,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_elimination_cert",
      "context": "\"legacy_elimination_cert.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "documentation_consistency_report.json",
      "line": 397,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "\"SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_reference_scan.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "documentation_consistency_report.json",
      "line": 414,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_elimination_check",
      "context": "\"SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_elimination_check.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "documentation_consistency_report.json",
      "line": 415,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functionality_audit",
      "context": "\"SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_functionality_audit.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "documentation_consistency_report.json",
      "line": 448,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_elimination_cert",
      "context": "\"SYSTEMATIC_ENGINEERING_PLAN.md references missing scripts/legacy_elimination_cert.py\",",
      "severity": "MEDIUM"
    },
    {
      "file": "config/backup_config.json",
      "line": 31,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "\"*.log.old\",",
      "severity": "LOW"
    },
    {
      "file": "config/crdt_test_config.json",
      "line": 7,
      "pattern": "\\bold_\\w+",
      "category": "legacy_variables",
      "match": "old_data_ignored",
      "context": "\"old_data_ignored\": true,",
      "severity": "MEDIUM"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 160,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "**Repository Archaeological Analysis & Complete Legacy Elimination:**",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 164,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "2. \u2705 **REPO-002**: **COMPLETE LEGACY ELIMINATION** - All legacy directories and files removed",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 164,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "2. \u2705 **REPO-002**: **COMPLETE LEGACY ELIMINATION** - All legacy directories and files removed",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 168,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "6. \u2705 **REPO-006**: **LEGACY REFERENCE CLEANUP** - All legacy imports and active references cleaned",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 168,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "6. \u2705 **REPO-006**: **LEGACY REFERENCE CLEANUP** - All legacy imports and active references cleaned",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 173,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- \u2705 **ZERO legacy code remaining** anywhere in repository (validated)",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 177,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- \u2705 **All legacy references removed** from active codebase (validated)",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 181,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- \u2705 Legacy elimination: PASS (zero legacy code detected)",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 181,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- \u2705 Legacy elimination: PASS (zero legacy code detected)",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 196,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- \u2705 **Repository Cleanliness:** ZERO legacy code remaining (Stage 1 validated)",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 207,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Code Quality:** Clean, zero legacy references (validated) + Engineering framework established",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 208,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Technical Debt:** Zero legacy debt eliminated + Quality gates operational",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 223,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Repository Cleanliness:** \u2705 OPTIMIZED - 238M, 241 files, zero legacy (Stage 1 complete)",
      "severity": "LOW"
    },
    {
      "file": "STAGE_STATUS.md",
      "line": 167,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "5. \u2705 **REPO-005**: Non-essential files removed (temporary results, old validation reports)",
      "severity": "LOW"
    },
    {
      "file": "INFORMATION_ARCHITECTURE.md",
      "line": 54,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "| 1 | Base System | Repository Cleanliness | Legacy Elimination |",
      "severity": "LOW"
    },
    {
      "file": "README.md",
      "line": 60,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "\u251c\u2500\u2500 archive/            # Legacy code archive",
      "severity": "LOW"
    },
    {
      "file": "README.md",
      "line": 60,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Legacy",
      "context": "\u251c\u2500\u2500 archive/            # Legacy code archive",
      "severity": "MEDIUM"
    },
    {
      "file": "README.md",
      "line": 60,
      "pattern": "archive/",
      "category": "legacy_directories",
      "match": "archive/",
      "context": "\u251c\u2500\u2500 archive/            # Legacy code archive",
      "severity": "LOW"
    },
    {
      "file": "ERROR_REGISTRY.md",
      "line": 43,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "#### **4. Legacy Code Structure Issues (RESOLVED)**",
      "severity": "LOW"
    },
    {
      "file": "ERROR_REGISTRY.md",
      "line": 44,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- **Pattern:** Legacy code references blocking modern functionality",
      "severity": "LOW"
    },
    {
      "file": "ERROR_REGISTRY.md",
      "line": 46,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Root Cause:** Incomplete legacy code elimination",
      "severity": "LOW"
    },
    {
      "file": "ERROR_REGISTRY.md",
      "line": 47,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Resolution:** Complete archaeological analysis and legacy elimination",
      "severity": "LOW"
    },
    {
      "file": "ERROR_REGISTRY.md",
      "line": 48,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Prevention:** Automated legacy detection, modern structure enforcement",
      "severity": "LOW"
    },
    {
      "file": "ERROR_REGISTRY.md",
      "line": 77,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "#### **3. Legacy Elimination System**",
      "severity": "LOW"
    },
    {
      "file": "ERROR_REGISTRY.md",
      "line": 78,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Components:** Comprehensive legacy detection and removal",
      "severity": "LOW"
    },
    {
      "file": "ERROR_REGISTRY.md",
      "line": 79,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- **Coverage:** Legacy directories, files, references, imports",
      "severity": "LOW"
    },
    {
      "file": "ERROR_REGISTRY.md",
      "line": 81,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Current Status:** Zero legacy code remaining (Stage 1 validated)",
      "severity": "LOW"
    },
    {
      "file": "ERROR_REGISTRY.md",
      "line": 43,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "#### **4. Legacy",
      "context": "#### **4. Legacy Code Structure Issues (RESOLVED)**",
      "severity": "MEDIUM"
    },
    {
      "file": "ERROR_REGISTRY.md",
      "line": 77,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "#### **3. Legacy",
      "context": "#### **3. Legacy Elimination System**",
      "severity": "MEDIUM"
    },
    {
      "file": "CHANGELOG.md",
      "line": 115,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- **Complete Legacy Cleanup**: Removed all legacy code and fallback systems",
      "severity": "LOW"
    },
    {
      "file": "CHANGELOG.md",
      "line": 115,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Complete Legacy Cleanup**: Removed all legacy code and fallback systems",
      "severity": "LOW"
    },
    {
      "file": "CHANGELOG.md",
      "line": 122,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- **Legacy Import Issues**: Cleaned up all broken import paths and dependencies",
      "severity": "LOW"
    },
    {
      "file": "CHANGELOG.md",
      "line": 131,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "## Legacy Versions (Pre-1.0)",
      "severity": "LOW"
    },
    {
      "file": "CHANGELOG.md",
      "line": 133,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "Previous versions (V0.19 and earlier) contained legacy code and multiple experimental features.",
      "severity": "LOW"
    },
    {
      "file": "CHANGELOG.md",
      "line": 134,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "All legacy components have been archived and the system rebuilt from the ground up for production use.",
      "severity": "LOW"
    },
    {
      "file": "CHANGELOG.md",
      "line": 88,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "- **Test Output Files**: Cleaned up old test output files and logs",
      "severity": "LOW"
    },
    {
      "file": "CHANGELOG.md",
      "line": 131,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "## Legacy",
      "context": "## Legacy Versions (Pre-1.0)",
      "severity": "MEDIUM"
    },
    {
      "file": "CHANGELOG.md",
      "line": 85,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "#### Remove",
      "context": "#### Removed",
      "severity": "MEDIUM"
    },
    {
      "file": "CHANGELOG.md",
      "line": 114,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "#### Remove",
      "context": "#### Removed",
      "severity": "MEDIUM"
    },
    {
      "file": "TESTS.md",
      "line": 92,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- \u2705 **Legacy Test Runner:** Full backward compatibility maintained",
      "severity": "LOW"
    },
    {
      "file": "TESTS.md",
      "line": 33,
      "pattern": "\\bold\\b",
      "category": "legacy_keywords",
      "match": "old",
      "context": "4. **Regression Tests - Prevent old bugs** \u2705 PASS (14 tests, 0 failures, 0 errors)",
      "severity": "LOW"
    },
    {
      "file": "PROGRESS.md",
      "line": 134,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- \u2705 Repository cleanup completed (removed 80+ legacy files)",
      "severity": "LOW"
    },
    {
      "file": "PROGRESS.md",
      "line": 137,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- \u2705 Legacy code removal completed",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 33,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "### **STAGE 1: Repository Archaeological Analysis & Complete Legacy Elimination**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 34,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "**Objective:** Complete repository cleanliness with ZERO legacy code and unnecessary files + Full GUI Architecture Preparation",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 38,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "2. **REPO-002**: **COMPLETE LEGACY ELIMINATION** - Remove ALL legacy code from `/archive/legacy_code/` and legacy references",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 38,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "2. **REPO-002**: **COMPLETE LEGACY ELIMINATION** - Remove ALL legacy code from `/archive/legacy_code/` and legacy references",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 38,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "2. **REPO-002**: **COMPLETE LEGACY ELIMINATION** - Remove ALL legacy code from `/archive/legacy_code/` and legacy references",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 42,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "6. **REPO-006**: **LEGACY REFERENCE CLEANUP** - Remove legacy imports and references from all active files",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 42,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "6. **REPO-006**: **LEGACY REFERENCE CLEANUP** - Remove legacy imports and references from all active files",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 44,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "8. **REPO-008**: Validate clean repository with file count metrics and legacy verification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 47,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **ZERO legacy code remaining anywhere in repository**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 51,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- All legacy references removed from active codebase",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 58,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "grep -r \"legacy\" . --exclude-dir=.git     # Zero legacy references check",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 58,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "grep -r \"legacy\" . --exclude-dir=.git     # Zero legacy references check",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 60,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "python scripts/validate_legacy_removal.py # Complete legacy elimination verification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 197,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "5. **GUI-011**: **LEGACY CODE REMOVAL VERIFICATION** - Confirm zero legacy references remain",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 197,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "5. **GUI-011**: **LEGACY CODE REMOVAL VERIFICATION** - Confirm zero legacy references remain",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 207,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Zero legacy code references in entire codebase**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 217,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "python scripts/legacy_reference_scan.py     # Zero legacy code verification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 274,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "### **STAGE 7: Complete Legacy Elimination & Architecture Optimization**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 275,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "**Objective:** **ZERO legacy code remaining** with optimized modern architecture and technical debt elimination",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 279,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "2. **LEGACY-001**: **FINAL LEGACY CODE ELIMINATION** - Remove ALL remaining legacy references",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 279,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "2. **LEGACY-001**: **FINAL LEGACY CODE ELIMINATION** - Remove ALL remaining legacy references",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 279,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "2. **LEGACY-001**: **FINAL LEGACY CODE ELIMINATION** - Remove ALL remaining legacy references",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 280,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "3. **LEGACY-002**: **LEGACY FUNCTIONALITY MIGRATION** - Ensure all legacy capabilities moved to modern GUI",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 280,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "3. **LEGACY-002**: **LEGACY FUNCTIONALITY MIGRATION** - Ensure all legacy capabilities moved to modern GUI",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 280,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "3. **LEGACY-002**: **LEGACY FUNCTIONALITY MIGRATION** - Ensure all legacy capabilities moved to modern GUI",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 283,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "6. **LEGACY-003**: **LEGACY IMPORT CLEANUP** - Remove all legacy imports and dependencies",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 283,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "6. **LEGACY-003**: **LEGACY IMPORT CLEANUP** - Remove all legacy imports and dependencies",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 283,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "6. **LEGACY-003**: **LEGACY IMPORT CLEANUP** - Remove all legacy imports and dependencies",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 289,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **ZERO legacy code, imports, or references anywhere in the system**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 290,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **All legacy functionality successfully migrated to modern GUI system**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 300,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "python scripts/legacy_elimination_check.py  # Complete legacy removal verification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 301,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "python scripts/legacy_functionality_audit.py # Legacy capability migration verification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 305,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "grep -r \"legacy\" . --exclude-dir=.git       # Final legacy reference check (should be empty)",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 305,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "grep -r \"legacy\" . --exclude-dir=.git       # Final legacy reference check (should be empty)",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 356,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "**Objective:** **Perfect GUI system integration** with optimal performance, reliability, and complete legacy elimination verification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 364,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "6. **GUI-021**: **FINAL LEGACY VERIFICATION** - Absolute confirmation zero legacy code remains",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 364,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "6. **GUI-021**: **FINAL LEGACY VERIFICATION** - Absolute confirmation zero legacy code remains",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 373,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Absolute zero legacy code confirmed through comprehensive scanning**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 388,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "python scripts/final_legacy_scan.py          # Absolute legacy elimination verification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 392,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "find . -name \"*.py\" -exec grep -l \"legacy\" {} \\; # Final legacy check (should be empty)",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 392,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "find . -name \"*.py\" -exec grep -l \"legacy\" {} \\; # Final legacy check (should be empty)",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 416,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "**Objective:** **Production-ready GUI system** with continuous improvement, excellence monitoring, and complete legacy elimination",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 425,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "7. **GUI-025**: **LEGACY ELIMINATION CERTIFICATE** - Final documentation proving zero legacy code",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 425,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "7. **GUI-025**: **LEGACY ELIMINATION CERTIFICATE** - Final documentation proving zero legacy code",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 433,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Absolute zero legacy code with comprehensive verification and documentation**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 448,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "python scripts/legacy_elimination_cert.py    # Legacy elimination certification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 451,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "grep -r \"legacy\" . --exclude-dir=.git        # Final legacy verification (must be empty)",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 451,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "grep -r \"legacy\" . --exclude-dir=.git        # Final legacy verification (must be empty)",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 485,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "**\u2705 COMPLETE LEGACY ELIMINATION GUARANTEE:**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 486,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Absolute zero legacy code remaining in entire repository**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 487,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **All legacy references, imports, and dependencies completely removed**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 488,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- **Legacy functionality fully migrated to modern GUI system**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 489,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Multiple verification stages ensuring complete legacy elimination**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 497,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "LEGACY",
      "context": "### **VERIFICATION STAGES FOR GUI & LEGACY ELIMINATION:**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 498,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- **Stage 1**: Legacy code removal and GUI architecture preparation",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 501,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Stage 5**: GUI implementation with legacy elimination verification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 503,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Stage 7**: Final legacy elimination with migration verification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 505,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Stage 9**: Final GUI integration with absolute legacy verification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 506,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Stage 10**: Production GUI system with legacy elimination certification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 528,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "### **GUI & Legacy Elimination Metrics:**",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 530,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- **Legacy Code Elimination**: 100% (zero legacy references remaining)",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 530,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Legacy Code Elimination**: 100% (zero legacy references remaining)",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 543,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Repository Cleanliness**: <50MB optimized size with zero legacy debris",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 547,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- **Legacy Elimination**: 100% verified through multiple validation stages",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 555,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- **Legacy Function Migration**: 100% of legacy capabilities available in modern GUI",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 555,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Legacy Function Migration**: 100% of legacy capabilities available in modern GUI",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 585,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Always verify legacy elimination** at each stage transition",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 601,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Complete legacy elimination** with comprehensive verification",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 606,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- **Absolute zero legacy code** remaining anywhere in the system",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 618,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- **Legacy-free architecture** preventing future technical debt accumulation",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 622,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "*Designed for complete GUI system delivery and total legacy code elimination*",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 625,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "*GUARANTEED: Modern GUI system + Zero legacy code + Professional user experience*",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 38,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "2. **REPO-002**: **COMPLETE LEGACY ELIMINATION** - Remove ALL legacy code from `/archive/legacy_code/` and legacy references",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 41,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "5. **REPO-005**: Remove all non-essential files (backup what's needed first)",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 42,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "6. **REPO-006**: **LEGACY REFERENCE CLEANUP** - Remove legacy imports and references from all active files",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 279,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "2. **LEGACY-001**: **FINAL LEGACY CODE ELIMINATION** - Remove ALL remaining legacy references",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 283,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "6. **LEGACY-003**: **LEGACY IMPORT CLEANUP** - Remove all legacy imports and dependencies",
      "severity": "LOW"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 283,
      "pattern": "import.*legacy",
      "category": "legacy_imports",
      "match": "IMPORT CLEANUP** - Remove all legacy",
      "context": "6. **LEGACY-003**: **LEGACY IMPORT CLEANUP** - Remove all legacy imports and dependencies",
      "severity": "HIGH"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 38,
      "pattern": "from.*legacy",
      "category": "legacy_imports",
      "match": "from `/archive/legacy_code/` and legacy",
      "context": "2. **REPO-002**: **COMPLETE LEGACY ELIMINATION** - Remove ALL legacy code from `/archive/legacy_code/` and legacy references",
      "severity": "HIGH"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 33,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "### **STAGE 1: Repository Archaeological Analysis & Complete Legacy",
      "context": "### **STAGE 1: Repository Archaeological Analysis & Complete Legacy Elimination**",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 58,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Zero legacy",
      "context": "grep -r \"legacy\" . --exclude-dir=.git     # Zero legacy references check",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 60,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Complete legacy",
      "context": "python scripts/validate_legacy_removal.py # Complete legacy elimination verification",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 217,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Zero legacy",
      "context": "python scripts/legacy_reference_scan.py     # Zero legacy code verification",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 274,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "### **STAGE 7: Complete Legacy",
      "context": "### **STAGE 7: Complete Legacy Elimination & Architecture Optimization**",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 300,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Complete legacy",
      "context": "python scripts/legacy_elimination_check.py  # Complete legacy removal verification",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 301,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Legacy",
      "context": "python scripts/legacy_functionality_audit.py # Legacy capability migration verification",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 305,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Final legacy",
      "context": "grep -r \"legacy\" . --exclude-dir=.git       # Final legacy reference check (should be empty)",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 388,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Absolute legacy",
      "context": "python scripts/final_legacy_scan.py          # Absolute legacy elimination verification",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 392,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Final legacy",
      "context": "find . -name \"*.py\" -exec grep -l \"legacy\" {} \\; # Final legacy check (should be empty)",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 448,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Legacy",
      "context": "python scripts/legacy_elimination_cert.py    # Legacy elimination certification",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 451,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "# Final legacy",
      "context": "grep -r \"legacy\" . --exclude-dir=.git        # Final legacy verification (must be empty)",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 497,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "### **VERIFICATION STAGES FOR GUI & LEGACY",
      "context": "### **VERIFICATION STAGES FOR GUI & LEGACY ELIMINATION:**",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 528,
      "pattern": "#.*legacy",
      "category": "legacy_comments",
      "match": "### **GUI & Legacy",
      "context": "### **GUI & Legacy Elimination Metrics:**",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 38,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_code",
      "context": "2. **REPO-002**: **COMPLETE LEGACY ELIMINATION** - Remove ALL legacy code from `/archive/legacy_code/` and legacy references",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 217,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_reference_scan",
      "context": "python scripts/legacy_reference_scan.py     # Zero legacy code verification",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 300,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_elimination_check",
      "context": "python scripts/legacy_elimination_check.py  # Complete legacy removal verification",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 301,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_functionality_audit",
      "context": "python scripts/legacy_functionality_audit.py # Legacy capability migration verification",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 448,
      "pattern": "\\blegacy_\\w+",
      "category": "legacy_variables",
      "match": "legacy_elimination_cert",
      "context": "python scripts/legacy_elimination_cert.py    # Legacy elimination certification",
      "severity": "MEDIUM"
    },
    {
      "file": "SYSTEMATIC_ENGINEERING_PLAN.md",
      "line": 38,
      "pattern": "archive/",
      "category": "legacy_directories",
      "match": "archive/",
      "context": "2. **REPO-002**: **COMPLETE LEGACY ELIMINATION** - Remove ALL legacy code from `/archive/legacy_code/` and legacy references",
      "severity": "LOW"
    },
    {
      "file": "docs/TROUBLESHOOTING.md",
      "line": 375,
      "pattern": "backup/",
      "category": "legacy_directories",
      "match": "backup/",
      "context": "cp -r data/ data_backup/",
      "severity": "LOW"
    },
    {
      "file": "docs/ARCHITECTURE.md",
      "line": 96,
      "pattern": "\\bremove\\b",
      "category": "legacy_keywords",
      "match": "Remove",
      "context": "# Observed-Remove Set (Archive entries)",
      "severity": "LOW"
    },
    {
      "file": "docs/ARCHITECTURE.md",
      "line": 96,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "# Observed-Remove",
      "context": "# Observed-Remove Set (Archive entries)",
      "severity": "MEDIUM"
    },
    {
      "file": "archive/README.md",
      "line": 10,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- \u2705 **Legacy Code Directory** - All legacy code files completely eliminated",
      "severity": "LOW"
    },
    {
      "file": "archive/README.md",
      "line": 10,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- \u2705 **Legacy Code Directory** - All legacy code files completely eliminated",
      "severity": "LOW"
    },
    {
      "file": "archive/README.md",
      "line": 11,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "Legacy",
      "context": "- \u2705 **Legacy Demos Directory** - All demo files and test demonstrations removed",
      "severity": "LOW"
    },
    {
      "file": "archive/README.md",
      "line": 16,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- \ud83c\udfaf **All legacy code completely eliminated** from repository",
      "severity": "LOW"
    },
    {
      "file": "archive/README.md",
      "line": 34,
      "pattern": "\\blegacy\\b",
      "category": "legacy_keywords",
      "match": "legacy",
      "context": "- Zero legacy references remaining in active codebase",
      "severity": "LOW"
    },
    {
      "file": "archive/README.md",
      "line": 9,
      "pattern": "#.*remove",
      "category": "legacy_comments",
      "match": "### **Remove",
      "context": "### **Removed Components:**",
      "severity": "MEDIUM"
    },
    {
      "file": "tests/output/README.md",
      "line": 11,
      "pattern": "temp/",
      "category": "legacy_directories",
      "match": "temp/",
      "context": "- `temp/` - Temporary test files",
      "severity": "LOW"
    },
    {
      "type": "directory",
      "path": "archive",
      "severity": "HIGH",
      "recommendation": "Remove legacy directory"
    },
    {
      "type": "file",
      "path": "performance_thresholds.json",
      "severity": "MEDIUM",
      "recommendation": "Review and remove legacy file"
    },
    {
      "type": "file",
      "path": "scripts/legacy_reference_scan.py",
      "severity": "MEDIUM",
      "recommendation": "Review and remove legacy file"
    },
    {
      "file": ".gitignore",
      "line": 86,
      "pattern": "temp/",
      "category": "legacy_directories",
      "match": "temp/",
      "context": "tests/output/temp/*",
      "severity": "LOW"
    }
  ],
  "recommendations": [
    {
      "priority": "CRITICAL",
      "category": "High Severity Legacy Code",
      "issue": "49 high-severity legacy references found",
      "recommendation": "Immediately remove all legacy imports, functions, and critical references",
      "impact": "Legacy code may cause system instability or security issues",
      "files_affected": [
        "jarvis/ai/multimodal_processor.py",
        "jarvis/core/distributed_agent_coordinator.py",
        "jarvis/core/archive_purge_manager.py",
        "jarvis/memory/memory_manager.py",
        "scripts/legacy_reference_scan.py",
        "performance_thresholds.json",
        "tests/test_system_health_metrics_comprehensive.py",
        "scripts/performance_benchmarks.py",
        "performance_benchmarks_20250807_103346.json",
        "jarvis/monitoring/realtime_metrics.py",
        "scripts/functionality_audit.py",
        "jarvis/core/distributed_memory_system.py",
        "jarvis/core/crdt/crdt_conflict_resolver.py",
        "SYSTEMATIC_ENGINEERING_PLAN.md",
        "jarvis/monitoring/system_health.py",
        "jarvis/core/backup_recovery.py",
        "unknown",
        "jarvis/core/performance_monitor.py"
      ]
    },
    {
      "priority": "HIGH",
      "category": "Medium Severity Legacy Code",
      "issue": "293 medium-severity legacy references found",
      "recommendation": "Clean up legacy comments, variables, and documentation",
      "impact": "Technical debt and confusion for developers",
      "files_affected": [
        "jarvis/core/data_archiver.py",
        "tests/test_archive_purge.py",
        "jarvis/core/agent_workflow.py",
        "scripts/legacy_reference_scan.py",
        "jarvis/memory/production_memory.py",
        "jarvis/vectordb/chroma_manager.py",
        "CHANGELOG.md",
        "jarvis/core/crdt/crdt_network.py",
        "config/crdt_test_config.json",
        "jarvis/core/crdt/or_set.py",
        "scripts/analyze_error_patterns.py",
        "archive/README.md",
        "jarvis/monitoring/system_health.py",
        "jarvis/evolution/__init__.py",
        "jarvis/core/documentation_generator.py",
        "jarvis/core/archive_purge_manager.py",
        "jarvis/deployment/deployment_manager.py",
        "jarvis/evolution/functional_data_manager.py",
        "functionality_audit_report_20250807_111617.json",
        "stage1_validation_report_20250807_095108.json",
        "tests/test_phase10_specialized_crdt.py",
        "stage1_validation_report_20250807_094935.json",
        "tests/test_system_health_metrics_comprehensive.py",
        "jarvis/core/advanced_network_topology.py",
        "stage1_validation_report_20250807_095037.json",
        "jarvis/llm/providers/openai_provider.py",
        "ERROR_REGISTRY.md",
        "unknown",
        "gui/enhanced/comprehensive_dashboard.py",
        "error_pattern_analysis_20250807_100358.json",
        "jarvis/core/main.py",
        "documentation_consistency_report.json",
        "jarvis/core/performance_monitor.py",
        "SYSTEMATIC_ENGINEERING_PLAN.md",
        "jarvis/security/encryption_manager.py",
        "tests/test_crdt_edge_cases_comprehensive.py",
        "README.md",
        "tests/test_phase8_advanced_network_topology.py",
        "jarvis/security/audit_logger.py",
        "jarvis/llm/production_llm.py",
        "tests/test_crdt_phase4.py",
        "jarvis/core/crdt/pn_counter.py",
        "jarvis/backend/__init__.py",
        "jarvis/core/backup_recovery.py",
        "docs/ARCHITECTURE.md",
        "scripts/crdt_initialization.py",
        "jarvis/core/distributed_agent_coordinator.py",
        "tests/run_all_tests.py",
        "jarvis/memory/memory_manager.py",
        "jarvis/security/compliance_validator.py",
        "scripts/fix_database_corruption.py",
        "scripts/gui_functionality_audit.py",
        "jarvis/monitoring/realtime_metrics.py",
        "scripts/coverage_analysis.py",
        "jarvis/core/crdt/specialized_types.py",
        "scripts/functionality_audit.py",
        "jarvis/vectordb/semantic_search.py",
        "stage4_validation_report.json",
        "tests/test_crdt_implementation.py",
        "scripts/repair_databases.py",
        "jarvis/utils/logs.py",
        "tests/test_phase7_distributed_memory.py"
      ]
    },
    {
      "priority": "MEDIUM",
      "category": "File Cleanup",
      "issue": "68 files contain legacy references",
      "recommendation": "Review and clean each affected file individually",
      "impact": "Reduced code quality and maintainability",
      "files_affected": [
        "jarvis/core/data_archiver.py",
        "tests/test_archive_purge.py",
        "tests/test_crdt_implementation.py",
        "jarvis/core/agent_workflow.py",
        "scripts/legacy_reference_scan.py",
        "jarvis/memory/production_memory.py",
        "jarvis/vectordb/chroma_manager.py",
        "CHANGELOG.md",
        "jarvis/core/crdt/crdt_network.py",
        "config/crdt_test_config.json",
        "jarvis/core/distributed_memory_system.py",
        "jarvis/core/crdt/or_set.py",
        "scripts/analyze_error_patterns.py",
        "archive/README.md",
        "stage4_validation_report.json",
        "jarvis/evolution/__init__.py",
        "jarvis/core/archive_purge_manager.py",
        "scripts/repair_databases.py",
        "jarvis/core/documentation_generator.py",
        "jarvis/deployment/deployment_manager.py",
        "jarvis/evolution/functional_data_manager.py",
        "functionality_audit_report_20250807_111617.json",
        "tests/test_phase10_specialized_crdt.py",
        "stage1_validation_report_20250807_095108.json",
        "tests/test_system_health_metrics_comprehensive.py",
        "jarvis/core/advanced_network_topology.py",
        "stage1_validation_report_20250807_094935.json",
        "jarvis/llm/providers/openai_provider.py",
        "stage1_validation_report_20250807_095037.json",
        "ERROR_REGISTRY.md",
        "gui/enhanced/comprehensive_dashboard.py",
        "error_pattern_analysis_20250807_100358.json",
        "jarvis/core/main.py",
        "jarvis/utils/logs.py",
        "documentation_consistency_report.json",
        "jarvis/core/performance_monitor.py",
        "jarvis/ai/multimodal_processor.py",
        "jarvis/security/encryption_manager.py",
        "tests/test_crdt_edge_cases_comprehensive.py",
        "README.md",
        "scripts/performance_benchmarks.py",
        "tests/test_phase8_advanced_network_topology.py",
        "jarvis/security/audit_logger.py",
        "jarvis/llm/production_llm.py",
        "tests/test_crdt_phase4.py",
        "jarvis/core/crdt/pn_counter.py",
        "jarvis/backend/__init__.py",
        "jarvis/core/backup_recovery.py",
        "docs/ARCHITECTURE.md",
        "scripts/crdt_initialization.py",
        "jarvis/core/distributed_agent_coordinator.py",
        "tests/run_all_tests.py",
        "jarvis/memory/memory_manager.py",
        "performance_thresholds.json",
        "jarvis/security/compliance_validator.py",
        "scripts/fix_database_corruption.py",
        "performance_benchmarks_20250807_103346.json",
        "jarvis/monitoring/realtime_metrics.py",
        "scripts/gui_functionality_audit.py",
        "scripts/coverage_analysis.py",
        "jarvis/core/crdt/specialized_types.py",
        "scripts/functionality_audit.py",
        "jarvis/vectordb/semantic_search.py",
        "jarvis/core/crdt/crdt_conflict_resolver.py",
        "SYSTEMATIC_ENGINEERING_PLAN.md",
        "jarvis/monitoring/system_health.py",
        "unknown",
        "tests/test_phase7_distributed_memory.py"
      ]
    }
  ],
  "severity_breakdown": {
    "high": 49,
    "medium": 293,
    "low": 441
  }
}